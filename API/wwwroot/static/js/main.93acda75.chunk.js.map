{"version":3,"sources":["app/models/pagination.ts","app/models/activity.ts","app/api/agent.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/userStore.ts","app/stores/profileStore.ts","app/stores/commentStore.ts","app/stores/store.ts","app/layout/NavBar.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","Object","createClass","data","pagination","classCallCheck","this","PagingParams","pageNumber","arguments","length","undefined","pageSize","Activity","init","assign","ActivityFormValues","activity","id","title","category","description","date","city","venue","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","concat","response","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","JSON","parse","abrupt","stop","_x","apply","error","_ref2","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","setServerError","Promise","reject","responseBody","requests","url","get","then","body","put","post","delete","agent","Activities","list","params","details","create","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","Content-type","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Profile","displayName","image","ActivityStore","_this","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","result","axiosParams","sent","setActivity","setPagination","setLoadingInitial","t0","console","log","loadActivity","_callee2","_context2","getActivity","runInAction","_activity$attendees","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","_ref3","_callee3","attendee","newActivity","_context3","_x2","updateActivity","_ref4","_callee4","_context4","objectSpread2","_x3","deleteActivity","_ref5","_callee5","_context5","_x4","updateAttedance","_callee6","_context6","_this$selectedActivit","_this$selectedActivit2","filter","_this$selectedActivit3","_this$selectedActivit4","finish","cancelActivityToggle","_callee7","_context7","_this$selectedActivit5","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","toConsumableArray","CommonStore","window","localStorage","getItem","appLoaded","setToken","setAppLoaded","setItem","removeItem","ModalStore","modal","open","openModal","content","closeModal","UserStore","props","creds","modalStore","logout","getUser","setImage","setDisplayName","name","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","_this$profile$photos","photos","isMain","p","_this$profile$photos2","activityStore","_store$userStore$user","_store$userStore$user2","followingCount","_x5","_x6","_ref6","_store$userStore$user3","_x7","loadFollowings","_ref7","_x8","loadUserActivities","_ref8","_callee8","_context8","_x9","_x10","CommentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","_this$hubConnection","clearComments","addComment","_store$activityStore$","_this$hubConnection2","invoke","profileStore","commentStore","StoreContext","createContext","useStore","useContext","observer","_useStore$userStore","react_default","createElement","Menu","inverted","fixed","Container","Item","as","NavLink","to","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","MyTextInput","_useField","useField","_useField2","slicedToArray","field","meta","Form","Field","touched","lable","Label","basic","color","formik_esm","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","Header","textAlign","placeholder","type","render","marginBottom","fluid","ValidationErrors","Message","List","map","err","i","validationSchema","Yup","required","isValid","dirty","disabled","_useStore","Segment","vertical","size","isLoggedIn","Fragment","users_LoginForm","users_RegisterForm","_useStore$activitySto","width","marginTop","attached","active","has","esm","onChange","_userStore$user","Reveal","animated","Content","visible","hidden","e","preventDefault","handleFollow","Card","Description","str","substring","truncate","bio","extra","Icon","profiles_FollowButton","styles","borderColor","borderWidth","horizontal","Popup","hoverable","trigger","circular","bordered","profiles_ProfileCard","ActivityListItem","_activity$host","_activity$host2","Group","react_router_dom","secondary","dashboard_ActivityListItemAttendee","clearing","floated","groupedActivities","group","react","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","_useState","useState","_useState2","loadingNext","setLoadingNext","useEffect","Grid","Column","react_infinite_scroller_default","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","dashboard_ActivityList","dashboard_ActivityFilters","Loader","LoadingComponent","_ref$inverted","_ref$content","Dimmer","MyTextArea","label","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","react_datepicker_min_default","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","disableed","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","_ref$activity","relaxed","divided","Extra","details_ActivityDetailedHeader","details_ActivityDetailedInfo","details_ActivityDetailedChat","details_ActivityDetailedSidebar","TestErrors","baseUrl","widths","primary","NotFound","Inline","_commonStore$error","_commonStore$error2","message","Modal","onClose","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","setEditMode","_useStore$profileStor","isCurrentUser","profiles_ProfileEditForm","PhotoWidgetCropper","imagePreview","setCropper","react_cropper_es","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","_useDropzone","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","_useState3","_useState4","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","_profile$photos","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","profiles_ProfileAbout","profiles_ProfilePhotos","profiles_ProfileActivities","profiles_ProfileFollowings","menuPosition","Statistic","Divider","profiles_ProfileHeader","profiles_ProfileContent","PrivateRoute","Component","component","rest","objectWithoutProperties","_excluded","react_router","location","useLocation","finally","react_toastify_esm","hideProgressBar","modals_ModalContainer","exact","path","HomePage","layout_NavBar","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","__webpack_exports__","src_history","createBrowserHistory","ReactDOM","Provider","layout_App","document","getElementById"],"mappings":"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","file":"static/js/main.93acda75.chunk.js","sourcesContent":["export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n    data: T;\n    pagination: Pagination;\n\n    constructor(data: T, pagination: Pagination) {\n        this.data = data;\n        this.pagination = pagination;\n    }\n}\n\nexport class PagingParams {\n    pageNumber;\n    pageSize;\n\n    constructor(pageNumber = 1, pageSize = 2) {\n        this.pageNumber = pageNumber;\n        this.pageSize = pageSize;\n    }\n}","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n        id: string;\r\n        title: string;\r\n        date: Date | null;\r\n        description: string;\r\n        category: string;\r\n        city: string;\r\n        venue: string;\r\n        hostUsername: string;\r\n        isCancelled: boolean;\r\n        isGoing: boolean;\r\n        isHost: boolean;\r\n        host?: Profile;\r\n        attendees:Profile[]\r\n        \r\n}\r\n    \r\n export class Activity implements Activity {\r\n    constructor(init?: ActivityFormValues) {\r\n      Object.assign(this, init);\r\n    }\r\n  }\r\n\r\n  export class ActivityFormValues {\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(activity?: ActivityFormValues) {\r\n      if (activity) {\r\n        this.id = activity.id;\r\n        this.title = activity.title;\r\n        this.category = activity.category;\r\n        this.description = activity.description;\r\n        this.date = activity.date;\r\n        this.venue = activity.venue;\r\n        this.city = activity.city;\r\n      }\r\n    }\r\n  }","import { PaginatedResult } from './../models/pagination';\r\nimport { Photo, UserActivity } from './../models/profile';\r\nimport { ActivityFormValues } from './../models/activity';\r\nimport { UserFormValues } from './../models/user';\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Activity } from \"../models/activity\";\r\nimport { User } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\nimport { history } from '../..';\r\nimport { Profile } from '../models/profile';\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve,delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use ( config => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers!.Authorization = `Bearer ${token}`\r\n    return config;\r\n})\r\n\r\n//setinterval\r\naxios.interceptors.response.use(async response => {\r\n    if(process.env.NODE_ENV ==='development') \r\n    await sleep(500);\r\n    const pagination = response.headers['pagination']\r\n    if (pagination) {\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status,config } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n                 history.push('/not-found');\r\n            }\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateErrors.push(data.errors[key]);\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            } else {\r\n                toast.error(data)\r\n            }\r\n            break;\r\n        case 401:\r\n            toast.error('Session expired - please login again');\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n              history.push('/server-error');\r\n            break;\r\n    }\r\n    return Promise.reject(error)\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get:<T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    put:<T>(url: string,body:{}) => axios.put<T>(url,body).then(responseBody),\r\n    post:<T>(url: string,body:{}) => axios.post<T>(url,body).then(responseBody),\r\n    del:<T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', { params })\r\n        .then(responseBody),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    login:(user:UserFormValues) => requests.post<User>('/account/login',user),\r\n    register:(user:UserFormValues) => requests.post<User>('/account/register',user)\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file: Blob) => {\r\n        let formData = new FormData();\r\n        formData.append('File', file);\r\n        return axios.post<Photo>('photos', formData, {\r\n            headers: { 'Content-type': 'multipart/form-data' }\r\n        })\r\n    },\r\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n    deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n    updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\r\n    updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\r\n    listFollowings: (username: string, predicate: string) =>\r\n        requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n    listActivities: (username: string, predicate: string) =>\r\n        requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities,Account,Profiles\r\n}\r\n\r\nexport default agent;","import { User } from \"./user\";\n\nexport interface Profile {\n    username: string;\n    displayName: string;\n    image?: string;\n    followersCount: number;\n    followingCount: number;\n    following: boolean;\n    bio?: string;\n    photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n    constructor(user: User) {\n        this.username = user.username;\n        this.displayName = user.displayName;\n        this.image = user.image;\n    }\n}\n\nexport interface Photo {\n    id: string;\n    url: string;\n    isMain: boolean;\n}\n\nexport interface UserActivity {\n    id: string;\n    title: string;\n    category: string;\n    date: Date;\n}","import { PagingParams } from './../models/pagination';\r\nimport { ActivityFormValues } from './../models/activity';\r\nimport { Activity } from '../models/activity';\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { format } from 'date-fns';\r\nimport { store } from './store';\r\nimport { Profile } from '../models/profile';\r\nimport { Pagination } from '../models/pagination';\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set('all',true)\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  \r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    )\r\n  }\r\n\r\n  setPagingParams=(pagingParams: PagingParams) => {\r\n  this.pagingParams = pagingParams;\r\n  }\r\n\r\n  \r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                if (key !== 'startDate') this.predicate.delete(key);\r\n            })\r\n        }\r\n        switch (predicate) {\r\n            case 'all':\r\n                resetPredicate();\r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isGoing':\r\n                resetPredicate();\r\n                this.predicate.set('isGoing', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n        }\r\n    } \r\n\r\n   get axiosParams() {\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if (key === 'startDate') {\r\n                params.append(key, (value as Date).toISOString())\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n\r\n  //get activity by date eg: activity 2 months ago instead 22.02.2022\r\n  get activitiesByDate() {\r\n        return Array.from(this.activityRegistry.values()).sort((a, b) =>\r\n            a.date!.getTime() - b.date!.getTime());\r\n    }\r\n\r\n//Grouping the activities assign single date for every activities\r\n  get groupedActivities() {\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((activities, activity) => {\r\n                const date = format(activity.date!, 'dd MMM yyyy');\r\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities;\r\n            }, {} as {[key: string]: Activity[]})\r\n        )\r\n    }\r\n\r\n\r\n  //create loading indicator\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams)\r\n      result.data.forEach(activity => {\r\n        this.setActivity(activity);\r\n      })\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  }\r\n  \r\n\r\n  //loading activity\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity((id));\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        })\r\n        this.setLoadingInitial(false)\r\n        return activity;\r\n      } catch (err) {\r\n        console.log(err);\r\n          this.setLoadingInitial(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        a => a.username === user.username\r\n      )\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\r\n    }\r\n    activity.date = new Date(activity.date!)\r\n       this.activityRegistry.set(activity.id,activity);\r\n  }\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  }\r\n\r\n  //set a loading \r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  //create an activity\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!)\r\n\r\n    // activity.id = uuid();\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      })\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  // update an activity\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updateActivity = { ...this.getActivity(activity.id), ...activity }\r\n          this.activityRegistry.set(activity.id, updateActivity as Activity);\r\n          this.selectedActivity = updateActivity as Activity;\r\n        }\r\n      })\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id)\r\n        this.loading = false;\r\n      })\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      })\r\n    }\r\n  }\r\n\r\n  updateAttedance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(a => a.username !== user?.username)\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(this.selectedActivity!.id,this.selectedActivity!)\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => this.loading = false);\r\n    }\r\n  }\r\n\r\n  //Cancel Attendance\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n        this.activityRegistry.set(this.selectedActivity!.id,this.selectedActivity!)\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => this.loading = false);\r\n    }\r\n  }\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  }\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach(activity => {\r\n      activity.attendees.forEach(attendee => {\r\n        if (attendee.username === username) {\r\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt',token)\r\n                } else {\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n   setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}\r\n\r\n// import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\n// import { makeAutoObservable, runInAction } from \"mobx\";\r\n// import { ChatComment } from \"../models/comment\";\r\n// import { store } from \"./store\";\r\n\r\n// export default class CommentStore {\r\n//     comments: ChatComment[] = [];\r\n//     hubConnection: HubConnection | null = null;\r\n\r\n//     constructor() {\r\n//         makeAutoObservable(this);\r\n//     }\r\n\r\n//     createHubConnection = (activityId: string) => {\r\n//         if (store.activityStore.selectedActivity) {\r\n//             this.hubConnection = new HubConnectionBuilder()\r\n//                 .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n//                     accessTokenFactory: () => store.userStore.user?.token!\r\n//                 })\r\n//                 .withAutomaticReconnect()\r\n//                 .configureLogging(LogLevel.Information)\r\n//                 .build();\r\n\r\n//             this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\r\n\r\n//             this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n//                 runInAction(() => {\r\n//                     comments.forEach(comment => {\r\n//                         comment.createdAt = new Date(comment.createdAt + 'Z');\r\n//                     })\r\n//                     this.comments = comments\r\n//                 });\r\n//             })\r\n\r\n//             this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n//                 runInAction(() => {\r\n//                     comment.createdAt = new Date(comment.createdAt);\r\n//                     this.comments.unshift(comment)\r\n//                 });\r\n//             })\r\n//         }\r\n//     }\r\n\r\n//     stopHubConnection = () => {\r\n//         this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error));\r\n//     }\r\n\r\n//     clearComments = () => {\r\n//         this.comments = [];\r\n//         this.stopHubConnection();\r\n//     }\r\n\r\n//     addComment = async (values: any) => {\r\n//         values.activityId = store.activityStore.selectedActivity?.id;\r\n//         try {\r\n//             await this.hubConnection?.invoke('SendComment', values);\r\n//         } catch (error) {\r\n//             console.log(error);\r\n//         }\r\n//     }\r\n    \r\n// }","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n    open: boolean;\n    body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n    modal: Modal = {\n        open: false,\n        body: null\n    }\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    openModal = (content: JSX.Element) => {\n        this.modal.open = true;\n        this.modal.body = content;\n    }\n\n    closeModal = () => {\n        this.modal.open = false;\n        this.modal.body = null;\n    }\n}","import { makeAutoObservable, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\nimport { history } from \"../..\";\n\nexport default class UserStore { \n    user: User | null = null;\n    props: any;\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    get isLoggedIn() {\n        return !!this.user;\n    }\n\n    login = async (creds: UserFormValues) => {\n        try {\n            const user = await agent.Account.login(creds);\n            store.commonStore.setToken(user.token)\n            runInAction(() => this.user = user);\n            history.push('/activities');\n            store.modalStore.closeModal();\n            console.log(user)\n        } catch (err) {\n            throw err;\n        }\n    }\n    logout = () => {\n        store.commonStore.setToken(null);\n        window.localStorage.removeItem('jwt');\n        this.user = null;\n        history.push('/');\n    }\n     getUser = async () => {\n        try {\n            const user = await agent.Account.current();\n            // store.commonStore.setToken(user.token);\n            runInAction(() => this.user = user);\n            // this.startRefreshTokenTimer(user);\n        } catch (error) {\n            console.log(error);\n        }\n     }\n\n     register = async (creds: UserFormValues) => {\n         try {\n             const user = await agent.Account.register(creds);\n            store.commonStore.setToken(user.token)\n            runInAction(() => this.user = user);\n            history.push('/activities');\n            store.modalStore.closeModal();\n        } catch (error) {\n            throw error;\n        }\n     }\n        setImage = (image: string) => {\n        if (this.user) this.user.image = image;\n    } \n        setDisplayName = (name: string) => {\n        if (this.user) this.user.displayName = name;\n    }\n    \n}\n\n\n// import { makeAutoObservable, runInAction } from \"mobx\";\n// import { history } from \"../..\";\n// import agent from \"../api/agent\";\n// import { User, UserFormValues } from \"../models/user\";\n// import { store } from \"./store\";\n\n// export default class UserStore {\n//     user: User | null = null;\n//     fbAccessToken: string | null = null;\n//     fbLoading = false;\n//     refreshTokenTimeout: any;\n\n//     constructor() {\n//         makeAutoObservable(this)\n//     }\n\n//     get isLoggedIn() {\n//         return !!this.user;\n//     }\n\n//     login = async (creds: UserFormValues) => {\n//         try {\n//             const user = await agent.Account.login(creds);\n//             store.commonStore.setToken(user.token);\n//             this.startRefreshTokenTimer(user);\n//             runInAction(() => this.user = user);\n//             history.push('/activities');\n//             store.modalStore.closeModal();\n//         } catch (error) {\n//             throw error;\n//         }\n//     }\n\n//     logout = () => {\n//         store.commonStore.setToken(null);\n//         window.localStorage.removeItem('jwt');\n//         this.user = null;\n//         history.push('/');\n//     }\n\n//     getUser = async () => {\n//         try {\n//             const user = await agent.Account.current();\n//             store.commonStore.setToken(user.token);\n//             runInAction(() => this.user = user);\n//             this.startRefreshTokenTimer(user);\n//         } catch (error) {\n//             console.log(error);\n//         }\n//     }\n\n//     register = async (creds: UserFormValues) => {\n//         try {\n//             await agent.Account.register(creds);\n//             history.push(`/account/registerSuccess?email=${creds.email}`);\n//             store.modalStore.closeModal();\n//         } catch (error) {\n//             throw error;\n//         }\n//     }\n\n    // setImage = (image: string) => {\n    //     if (this.user) this.user.image = image;\n    // } \n\n    // setDisplayName = (name: string) => {\n    //     if (this.user) this.user.displayName = name;\n    // }\n\n//     getFacebookLoginStatus = async () => {\n//         window.FB.getLoginStatus(response => {\n//             if (response.status === 'connected') {\n//                 this.fbAccessToken = response.authResponse.accessToken;\n//             }\n//         })\n//     }\n\n//     facebookLogin = () => {\n//         this.fbLoading = true;\n//         const apiLogin = (accessToken: string) => {\n//             agent.Account.fbLogin(accessToken).then(user => {\n//                 store.commonStore.setToken(user.token);\n//                 this.startRefreshTokenTimer(user);\n//                 runInAction(() => {\n//                     this.user = user;\n//                     this.fbLoading = false;\n//                 })\n//                 history.push('/activities');\n//             }).catch(error => {\n//                 console.log(error);\n//                 runInAction(() => this.fbLoading = false);\n//             })\n//         }\n//         if (this.fbAccessToken) {\n//             apiLogin(this.fbAccessToken);\n//         } else {\n//             window.FB.login(response => {\n//                 apiLogin(response.authResponse.accessToken);\n//             }, {scope: 'public_profile,email'})\n//         }\n//     }\n\n//     refreshToken = async () => {\n//         this.stopRefreshTokenTimer();\n//         try {\n//             const user = await agent.Account.refreshToken();\n//             runInAction(() => this.user = user);\n//             store.commonStore.setToken(user.token);\n//             this.startRefreshTokenTimer(user);\n//         } catch (error) {\n//             console.log(error);\n//         }\n//     }\n\n//     private startRefreshTokenTimer(user: User) {\n//         const jwtToken = JSON.parse(atob(user.token.split('.')[1]));\n//         const expires = new Date(jwtToken.exp * 1000);\n//         const timeout = expires.getTime() - Date.now() - (60 * 1000);\n//         this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\n//     }\n\n//     private stopRefreshTokenTimer() {\n//         clearTimeout(this.refreshTokenTimeout);\n//     }\n// }","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { store } from \"./store\";\n// import agent from \"../api/agent\";\n// import { Photo, Profile, UserActivity } from \"../models/profile\";\n// import { store } from \"./store\";\n\n// export default class ProfileStore {\n//     profile: Profile | null = null;\n//     loadingProfile = false;\n//     uploading = false;\n//     loading = false;\n//     followings: Profile[] = [];\n//     loadingFollowings = false;\n//     activeTab = 0;\n    // userActivities: UserActivity[] = [];\n    // loadingActivities = false;\n\n//     constructor() {\n//         makeAutoObservable(this);\n\n//         reaction(\n//             () => this.activeTab,\n//             activeTab => {\n//                 if (activeTab === 3 || activeTab === 4) {\n//                     const predicate = activeTab === 3 ? 'followers' : 'following';\n//                     this.loadFollowings(predicate);\n//                 } else {\n//                     this.followings = [];\n//                 }\n//             }\n//         )\n//     }\n\n    // setActiveTab = (activeTab: any) => {\n    //     this.activeTab = activeTab;\n    // }\n\n    // get isCurrentUser() {\n    //     if (store.userStore.user && this.profile) {\n    //         return store.userStore.user.username === this.profile.username;\n    //     }\n    //     return false;\n    // }\n\n//     loadProfile = async (username: string) => {\n//         this.loadingProfile = true;\n//         try {\n//             const profile = await agent.Profiles.get(username);\n//             runInAction(() => {\n//                 this.profile = profile;\n//                 this.loadingProfile = false;\n//             })\n//         } catch (error) {\n//             console.log(error);\n//             runInAction(() => this.loadingProfile = false);\n//         }\n//     }\n\n    // uploadPhoto = async (file: Blob) => {\n    //     this.uploading = true;\n    //     try {\n    //         const response = await agent.Profiles.uploadPhoto(file);\n    //         const photo = response.data;\n    //         runInAction(() => {\n    //             if (this.profile) {\n    //                 this.profile.photos?.push(photo);\n    //                 if (photo.isMain && store.userStore.user) {\n    //                     store.userStore.setImage(photo.url);\n    //                     this.profile.image = photo.url;\n    //                 }\n    //             }\n    //             this.uploading = false;\n    //         })\n    //     } catch (error) {   \n    //         console.log(error);\n    //         runInAction(() => this.uploading = false);\n    //     }\n    // }\n\n    // setMainPhoto = async (photo: Photo) => {\n    //     this.loading = true;\n    //     try {\n    //         await agent.Profiles.setMainPhoto(photo.id);\n    //         store.userStore.setImage(photo.url);\n    //         runInAction(() => {\n    //             if (this.profile && this.profile.photos) {\n    //                 this.profile.photos.find(p => p.isMain)!.isMain = false;\n    //                 this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n    //                 this.profile.image = photo.url;\n    //                 this.loading = false;\n    //             }\n    //         })\n    //     } catch (error) {\n    //         runInAction(() => this.loading = false);\n    //         console.log(error);\n    //     }\n    // }\n\n    // deletePhoto = async (photo: Photo) => {\n    //     this.loading = true;\n    //     try {\n    //         await agent.Profiles.deletePhoto(photo.id);\n    //         runInAction(() => {\n    //             if (this.profile) {\n    //                 this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\n    //                 this.loading = false;\n    //             }\n    //         })\n    //     } catch (error) {\n    //         runInAction(() => this.loading = false);\n    //         console.log(error);\n    //     }\n    // }\n\n//     updateProfile = async (profile: Partial<Profile>) => {\n//         this.loading = true;\n//         try {\n//             await agent.Profiles.updateProfile(profile);\n//             runInAction(() => {\n//                 if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\n//                     store.userStore.setDisplayName(profile.displayName);\n//                 }\n//                 this.profile = {...this.profile, ...profile as Profile};\n//                 this.loading = false;\n//             })\n//         } catch (error) {\n//             console.log(error);\n//             runInAction(() => this.loading = false);\n//         }\n//     }\n\n    // updateFollowing = async (username: string, following: boolean) => {\n    //     this.loading = true;\n    //     try {\n    //         await agent.Profiles.updateFollowing(username);\n    //         store.activityStore.updateAttendeeFollowing(username);\n    //         runInAction(() => {\n    //             if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\n    //                 following ? this.profile.followersCount++ : this.profile.followersCount--;\n    //                 this.profile.following = !this.profile.following;\n    //             }\n    //             if (this.profile && this.profile.username === store.userStore.user?.username) {\n    //                 following ? this.profile.followingCount++ : this.profile.followingCount--;\n    //             }\n    //             this.followings.forEach(profile => {\n    //                 if (profile.username === username) {\n    //                     profile.following ? profile.followersCount-- : profile.followersCount++;\n    //                     profile.following = !profile.following;\n    //                 }\n    //             })\n    //             this.loading = false;\n    //         })\n    //     } catch (error) {\n    //         console.log(error);\n    //         runInAction(() => this.loading = false);\n    //     }\n    // }\n\n//     loadFollowings = async (predicate: string) => {\n//         this.loadingFollowings = true;\n//         try {\n//             const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n//             runInAction(() => {\n//                 this.followings = followings;\n//                 this.loadingFollowings = false;\n//             })\n//         } catch (error) {\n//             runInAction(() => this.loadingFollowings = false);\n//         }\n//     }\n\n//     loadUserActivities = async (username: string, predicate?: string) => {\n//         this.loadingActivities = true;\n//         try {\n//             const activities = await agent.Profiles.listActivities(username, predicate!);\n//             runInAction(() => {\n//                 this.userActivities = activities;\n//                 this.loadingActivities = false;\n//             })\n//         } catch (error) {\n//             console.log(error);\n//             runInAction(() => {\n//                 this.loadingActivities = false;\n//             })\n//         }\n//     }\n\n// }\n\nexport default class ProfileStore {\n    profile: Profile | null = null;\n    loadingProfile = false;\n    uploading = false;\n    loading = false;\n    followings: Profile[] = [];\n    loadingFollowings = false;\n    activeTab = 0;\n    userActivities: UserActivity[] = [];\n    loadingActivities = false;\n\n    constructor() {\n        makeAutoObservable(this);\n\n        reaction(\n            () => this.activeTab,\n            activeTab => {\n                if (activeTab === 3 || activeTab === 4) {\n                    const predicate = activeTab === 3 ? 'followers' : 'following';\n                    this.loadFollowings(predicate);\n                } else {\n                    this.followings = [];\n                }\n            }\n        )\n    }\n    setActiveTab = (activeTab: any) => {\n        this.activeTab = activeTab;\n    }\n    \n    get isCurrentUser() {\n        if (store.userStore.user && this.profile) {\n            return store.userStore.user.username === this.profile.username;\n        }\n        return false;\n    }\n\n    loadProfile = async (username: string) => {\n        this.loadingProfile = true;\n        try {\n            const profile = await agent.Profiles.get(username);\n            runInAction(() => {\n                this.profile = profile;\n                this.loadingProfile = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loadingProfile = false);\n        }\n    }\n\n        uploadPhoto = async (file: Blob) => {\n        this.uploading = true;\n        try {\n            const response = await agent.Profiles.uploadPhoto(file);\n            const photo = response.data;\n            runInAction(() => {\n                if (this.profile) {\n                    this.profile.photos?.push(photo);\n                    if (photo.isMain && store.userStore.user) {\n                        store.userStore.setImage(photo.url);\n                        this.profile.image = photo.url;\n                    }\n                }\n                this.uploading = false;\n            })\n        } catch (error) {   \n            console.log(error);\n            runInAction(() => this.uploading = false);\n        }\n        }\n        setMainPhoto = async (photo: Photo) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.setMainPhoto(photo.id);\n            store.userStore.setImage(photo.url);\n            runInAction(() => {\n                if (this.profile && this.profile.photos) {\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n                    this.profile.image = photo.url;\n                    this.loading = false;\n                }\n            })\n        } catch (error) {\n            runInAction(() => this.loading = false);\n            console.log(error);\n        }\n    }\n\n    deletePhoto = async (photo: Photo) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.deletePhoto(photo.id);\n            runInAction(() => {\n                if (this.profile) {\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\n                    this.loading = false;\n                }\n            })\n        } catch (error) {\n            runInAction(() => this.loading = false);\n            console.log(error);\n        }\n    }\n    updateFollowing = async (username: string, following: boolean) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.updateFollowing(username);\n            store.activityStore.updateAttendeeFollowing(username);\n            runInAction(() => {\n                if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\n                    this.profile.following = !this.profile.following;\n                }\n                if (this.profile && this.profile.username === store.userStore.user?.username) {\n                    following ? this.profile.followingCount++ : this.profile.followingCount--;\n                }\n                this.followings.forEach(profile => {\n                    if (profile.username === username) {\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\n                        profile.following = !profile.following;\n                    }\n                })\n                this.loading = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loading = false);\n        }\n    }\n    \n    updateProfile = async (profile: Partial<Profile>) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.updateProfile(profile);\n            runInAction(() => {\n                if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\n                    store.userStore.setDisplayName(profile.displayName);\n                }\n                this.profile = {...this.profile, ...profile as Profile};\n                this.loading = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loading = false);\n        }\n    }\n    \n    \n    loadFollowings = async (predicate: string) => {\n        this.loading = true;\n        try {\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n            runInAction(() => {\n                this.followings = followings\n                this.loadingFollowings = false;\n            })\n        } catch (error) {\n            console.log(error)\n            runInAction(() => this.loadingFollowings = false);\n        }\n    }\n\n      loadUserActivities = async (username: string, predicate?: string) => {\n        this.loadingActivities = true;\n        try {\n            const activities = await agent.Profiles.listActivities(username, predicate!);\n            runInAction(() => {\n                this.userActivities = activities;\n                this.loadingActivities = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => {\n                this.loadingActivities = false;\n            })\n        }\n    }\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { ChatComment } from \"../models/comment\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n    comments: ChatComment[] = [];\n    hubConnection: HubConnection | null = null;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    createHubConnection = (activityId: string) => {\n        if (store.activityStore.selectedActivity) {\n            this.hubConnection = new HubConnectionBuilder()\n                .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\n                    accessTokenFactory: () => store.userStore.user?.token!\n                })\n                .withAutomaticReconnect()\n                .configureLogging(LogLevel.Information)\n                .build();\n\n            this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\n\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\n                runInAction(() => {\n                    comments.forEach(comment => {\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\n                    })\n                    this.comments = comments\n                });\n            })\n\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\n                runInAction(() => {\n                    comment.createdAt = new Date(comment.createdAt);\n                    this.comments.unshift(comment)\n                });\n            })\n        }\n    }\n\n    stopHubConnection = () => {\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error));\n    }\n\n    clearComments = () => {\n        this.comments = [];\n        this.stopHubConnection();\n    }\n\n    addComment = async (values: any) => {\n        values.activityId = store.activityStore.selectedActivity?.id;\n        try {\n            await this.hubConnection?.invoke('SendComment', values);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}","import { createContext, useContext } from \"react\";\r\n// import { Activity } from \"../models/activity\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport UserStore from \"./userStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport CommentStore from \"./commentStore\";\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext)\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" header>\r\n          <img\r\n            src=\"assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"5px\" }}\r\n          />\r\n          PostActivity\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\r\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Image\r\n            src={user?.image || \"/assets/user.png\"}\r\n            avatar\r\n            spaced=\"right\"\r\n          />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                as={Link}\r\n                to={`/profiles/${user?.username}`}\r\n                text=\"My profile\"\r\n                icon=\"user\"\r\n              />\r\n              <Dropdown.Item onClick={logout} text=\"logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  lable?: string;\r\n  type?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.lable}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\n\nexport default observer(function LoginForm() {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\", error: null }}\n      onSubmit={(values, { setErrors }) =>\n        userStore\n          .login(values)\n          .catch((error) => setErrors({ error: error.response.data }))\n      }\n    >\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n          <Header as=\"h2\" content=\"Login\" color=\"black\" textAlign=\"center\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n              <Label\n                style={{ marginBottom: 10 }}\n                basic\n                color=\"red\"\n                content={errors.error}\n              />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            positive\n            content=\"Login\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport ValidationErrors from \"../errors/ValidationErrors\";\n\nexport default observer(function RegisterForm() {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{\n        displayName: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        error: null,\n      }}\n      onSubmit={(values, { setErrors }) =>\n        userStore.register(values).catch((error) => setErrors({ error }))\n      }\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form\n          className=\"ui form error\"\n          onSubmit={handleSubmit}\n          autoComplete=\"off\"\n        >\n          <Header\n            as=\"h2\"\n            content=\"Sign up to activites\"\n            color=\"black\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => <ValidationErrors errors={errors.error} />}\n          />\n          <Button\n            disabled={!isValid || !dirty || isSubmitting}\n            loading={isSubmitting}\n            positive\n            content=\"Register\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Header, Segment, Image, Button } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"banner\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to the activities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Login Now!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login!\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register!\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\r\n        <Header icon=\"filter\" attached color=\"blue\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All Activites\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent } from \"react\";\nimport { Reveal, Button } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function FollowButton({ profile }: Props) {\n  const { profileStore, userStore } = useStore();\n  const { updateFollowing, loading } = profileStore;\n\n  if (userStore.user?.username === profile.username) return null;\n\n  function handleFollow(e: SyntheticEvent, username: string) {\n    e.preventDefault();\n    profile.following\n      ? updateFollowing(username, false)\n      : updateFollowing(username, true);\n  }\n\n  return (\n    <Reveal animated=\"move\">\n      <Reveal.Content visible style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          color=\"green\"\n          content={profile.following ? \"Following\" : \"Not following\"}\n        />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          basic\n          color={profile.following ? \"red\" : \"green\"}\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\n          loading={loading}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </Reveal.Content>\n    </Reveal>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileCard({ profile }: Props) {\n  function truncate(str: string | undefined) {\n    if (str) {\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\n    }\n  }\n\n  return (\n    <Card\n      style={{ width: \"13rem\" }}\n      as={Link}\n      to={`/profiles/${profile.username}`}\n    >\n      <Image src={profile.image || \"/assets/user.png\"} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name=\"user\" />\n        {profile.followersCount} followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Image, List, Popup } from \"semantic-ui-react\";\nimport { Profile } from \"../../../app/models/profile\";\nimport ProfileCard from \"../../profiles/ProfileCard\";\n\ninterface Props {\n  attendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendee({\n  attendees,\n}: Props) {\n  const styles = {\n    borderColor: \"LimeGreen  \",\n    borderWidth: 3,\n  };\n\n  return (\n    <List horizontal>\n      {attendees.map((attendee) => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item\n              key={attendee.username}\n              as={Link}\n              to={`/profiles/${attendee.username}`}\n            >\n              <Image\n                size=\"mini\"\n                circular\n                src={attendee.image || \"/assets/user.png\"}\n                bordered\n                style={attendee.following ? styles : null}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} />\n          </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  );\n});\n\n","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            attached=\"top\"\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              style={{ marginBottom: 3 }}\r\n              size=\"tiny\"\r\n              circular\r\n              src={activity.host?.image || \"/assets/user.png\"}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted By\r\n                <Link to={`/profiles/${activity.hostUsername}`}>\r\n                  {activity.host?.displayName}\r\n                </Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are hosting to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" />\r\n          {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\r\n          <Icon name=\"marker\" />\r\n          {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"blue\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","// import { observer } from \"mobx-react-lite\";\r\n// import React, { Fragment } from \"react\";\r\n// import { Header } from \"semantic-ui-react\";\r\n// import { useStore } from \"../../../app/stores/store\";\r\n// import ActivityListItem from \"./ActivityListItem\";\r\n\r\n// export default observer(function ActivityList() {\r\n//   const { activityStore } = useStore();\r\n\r\n//   const { groupedActivities } = activityStore;\r\n\r\n//   return (\r\n//     //assign single date for every activities\r\n//     <>\r\n//       {groupedActivities.map(([group, activities]) => (\r\n//         <Fragment key={group}>\r\n//           <Header sub color=\"green\">\r\n//             {group}\r\n//           </Header>\r\n//           {activities.map((activity) => (\r\n//             <ActivityListItem key={activity.id} activity={activity} />\r\n//           ))}\r\n//         </Fragment>\r\n//       ))}\r\n//     </>\r\n//   );\r\n// });\r\n\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"green\">\r\n            {group}\r\n          </Header>\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from \"react\";\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\n\nexport default function ActivityListItemPlaceholder() {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 25 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\n//StructureList\r\nexport default observer(function ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const { loadActivities, activityRegistry, setPagingParams, pagination } =\r\n    activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) loadActivities();\r\n  }, [activityRegistry.size, loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean; //? denotes an optional parameter\r\n  content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({\r\n  inverted = true,\r\n  content = \"Loading...\",\r\n}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />;\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  rows: number;\n  label?: string;\n}\n\nexport default function MyTextArea(props: Props) {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label, Select } from 'semantic-ui-react';\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    options: any;\n    label?: string;\n}\n\nexport default function MySelectInput(props: Props) {\n    const [field, meta, helpers] = useField(props.name); \n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <Select \n                clearable\n                options={props.options}\n                value={field.value || null}\n                onChange={(e, d) => helpers.setValue(d.value)}\n                onBlur={() => helpers.setTouched(true)}\n                placeholder={props.placeholder}\n            />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    )\n}","export const categoryOptions = [\n    {text: 'Gaming', value: 'games'},\n    {text: 'Culture', value: 'culture'},\n    {text: 'Movie', value: 'film'},\n    {text: 'Coding', value: 'coding'},\n    {text: 'Programming', value: 'programs'},\n    {text: 'Travel', value: 'travel' },\n    {text: 'Music', value: 'music' },\n    {text: 'Texting', value: 'texting' },\n    {text: 'Drinks', value: 'drinks' }\n]","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\n  const [field, meta, helpers] = useField(props.name!);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <DatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={(value) => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n\r\n  const { updateActivity, createActivity, loadActivity, loadingInitial } =\r\n    activityStore;\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The title cannot be empty...\"),\r\n    description: Yup.string().required(\"The description cannot be empty...\"),\r\n    category: Yup.string().required(\"The category cannot be empty...\"),\r\n    date: Yup.string().required(\"The date is  required...\").nullable(),\r\n    city: Yup.string().required(\"The city is  required...\"),\r\n    venue: Yup.string().required(\"The venue is  required...\"),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      loadActivity(id).then((activity) =>\r\n        setActivity(new ActivityFormValues(activity))\r\n      );\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() =>\r\n        history.push(`/activities/${newActivity.id}`)\r\n      );\r\n    } else {\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity\" />;\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" sub color=\"blue\" />\r\n      {/* {/* enableReinitialize * it is used to manage the activities/ } */}\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\r\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\r\n            <MySelectInput\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n              options={categoryOptions}\r\n            />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location Details\" sub color=\"blue\" />\r\n            <MyTextInput placeholder=\"City\" name=\"city\" />\r\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              disableed={isSubmitting || !dirty || !isValid}\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/activities\"\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { formatDistanceToNow } from \"date-fns\";\r\nimport { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"violet\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n          initialValues={{ body: \"\" }}\r\n          validationSchema={Yup.object({\r\n            body: Yup.string().required(),\r\n          })}\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Type your comment(Press Enter to submit, SHIFT + ENTER for new line)\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === \"Enter\" && e.shiftKey) {\r\n                          return;\r\n                        }\r\n                        if (e.key === \"Enter\" && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)}</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(60%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttedance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{\r\n              position: \"absolute\",\r\n              zIndex: 1000,\r\n              left: -14,\r\n              top: 20,\r\n            }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p> {format(activity.date!, \"dd MMM yyyy \")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ?  \"blue\" : \"red\"}\r\n              floated=\"left\"\r\n              basic\r\n              content={\r\n                activity.isCancelled\r\n                  ? \"Re-activate Activity\"\r\n                  : \"Cancel Activity\"\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              as={Link}\r\n              disabled={activity.isCancelled}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"blue\"\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={updateAttedance} color=\"red\">\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={activity.isCancelled}\r\n            loading={loading}\r\n            onClick={updateAttedance}\r\n            color=\"black\"\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"orange\" name=\"info circle\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar alternate\" size=\"large\" color=\"grey\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"location arrow\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({\r\n  activity: { attendees, host },\r\n}: Props) {\r\n  if (!attendees) return null;\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"violet\"\r\n      >\r\n        {attendees.length}\r\n        {attendees.length === 1 ? \"Person\" : \" \" + \"People\"} Walkthrough\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"pink\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && (\r\n                  <Item.Extra style={{ color: \"Crimson\" }}>\r\n                    Following\r\n                  </Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponent />;\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n        <Grid.Column width={6}>\r\n          <ActivityDetailedSidebar activity={activity} />\r\n        </Grid.Column>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n  //Hit an API\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorised\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios.get(baseUrl + \"activities/notaguid\").catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Error 404: Oops! The page you are looking for cannot be found..\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to activities page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"violet\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"blue\" />\r\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { useStore } from \"../../stores/store\";\n\nexport default observer(function ModalContainer() {\n  const { modalStore } = useStore();\n\n  return (\n    <Modal\n      open={modalStore.modal.open}\n      onClose={modalStore.closeModal}\n      size=\"mini\"\n    >\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\n    </Modal>\n  );\n});\n","import React, { SyntheticEvent, useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { UserActivity } from \"../../app/models/profile\";\nimport { format } from \"date-fns\";\nimport { useStore } from \"../../app/stores/store\";\n\nconst panes = [\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\n];\n\nexport default observer(function ProfileActivities() {\n  const { profileStore } = useStore();\n  const { loadUserActivities, profile, loadingActivities, userActivities } =\n    profileStore;\n\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadUserActivities(\n      profile!.username,\n      panes[data.activeIndex as number].pane.key\n    );\n  };\n\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {userActivities.map((activity: UserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}\n              >\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\n                  <Card.Meta textAlign=\"center\">\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import React from \"react\";\nimport { Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button } from \"semantic-ui-react\";\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\n\ninterface Props {\n  setEditMode: (editMode: boolean) => void;\n}\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\n  const {\n    profileStore: { profile, updateProfile },\n  } = useStore();\n  return (\n    <Formik\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\n      onSubmit={(values) => {\n        updateProfile(values).then(() => {\n          setEditMode(false);\n        });\n      }}\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n      })}\n    >\n      {({ isSubmitting, isValid, dirty }) => (\n        <Form className=\"ui form\">\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\n          <Button\n            positive\n            type=\"submit\"\n            loading={isSubmitting}\n            content=\"Update profile\"\n            floated=\"right\"\n            disabled={!isValid || !dirty}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import React, { useState } from \"react\";\nimport { useStore } from \"../../app/stores/store\";\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\nimport ProfileEditForm from \"./ProfileEditForm\";\nimport { observer } from \"mobx-react-lite\";\n\nexport default observer(function ProfileAbout() {\n  const { profileStore } = useStore();\n  const { isCurrentUser, profile } = profileStore;\n  const [editMode, setEditMode] = useState(false);\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width=\"16\">\n          <Header\n            floated=\"left\"\n            icon=\"user\"\n            content={`About ${profile?.displayName}`}\n          />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\n              onClick={() => setEditMode(!editMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width=\"16\">\n          {editMode ? (\n            <ProfileEditForm setEditMode={setEditMode} />\n          ) : (\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import React from \"react\";\nimport { Tab, Grid, Header, Card } from \"semantic-ui-react\";\nimport ProfileCard from \"./ProfileCard\";\nimport { useStore } from \"../../app/stores/store\";\nimport { observer } from \"mobx-react-lite\";\n\nexport default observer(function ProfileFollowings() {\n  const { profileStore } = useStore();\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\n\n  return (\n    <Tab.Pane loading={loadingFollowings}>\n      <Grid>\n        <Grid.Column width=\"16\">\n          <Header\n            floated=\"left\"\n            icon=\"user\"\n            content={\n              activeTab === 3\n                ? `People following ${profile!.displayName}`\n                : `People ${profile?.displayName} is following`\n            }\n          />\n        </Grid.Column>\n        <Grid.Column width=\"16\">\n          <Card.Group itemsPerRow={4}>\n            {followings.map((profile) => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import React from \"react\";\nimport { Cropper } from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\ninterface Props {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper({\n  imagePreview,\n  setCropper,\n}: Props) {\n  return (\n    <Cropper\n      src={imagePreview}\n      style={{ height: 200, width: \"100%\" }}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview=\".img-preview\"\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={(cropper) => setCropper(cropper)}\n    />\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\n  const dzStyles = {\n    border: \"dashed 3px #eee\",\n    borderColor: \"#eee\",\n    borderRadius: \"5px\",\n    paddingTop: \"30px\",\n    textAlign: \"center\" as \"center\",\n    height: 200,\n  };\n\n  const dzActive = {\n    borderColor: \"green\",\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file: any) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n    [setFiles]\n  );\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div\n      {...getRootProps()}\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\n    >\n      <input {...getInputProps()} />\n      <Icon name=\"upload\" size=\"huge\" />\n      <Header content=\"Drop image here\" />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\n\ninterface Props {\n  loading: boolean;\n  uploadPhoto: (file: Blob) => void;\n}\n\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\n  const [files, setFiles] = useState<any>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n\n  function onCrop() {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\n    };\n  }, [files]);\n\n  return (\n    <Grid>\n      <Grid.Column width={4}>\n        <Header sub color=\"blue\" content=\"Step 1 - Add Photo\" />\n        <PhotoWidgetDropzone setFiles={setFiles} />\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color=\"blue\" content=\"Step 2 - Resize image\" />\n        {files && files.length > 0 && (\n          <PhotoWidgetCropper\n            setCropper={setCropper}\n            imagePreview={files[0].preview}\n          />\n        )}\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color=\"blue\" content=\"Step 3 - Preview & Upload\" />\n        {files && files.length > 0 && (\n          <>\n            <div\n              className=\"img-preview\"\n              style={{ minHeight: 400, overflow: \"hidden\" }}\n            />\n            <Button.Group widths={2}>\n              <Button\n                loading={loading}\n                onClick={onCrop}\n                positive\n                icon=\"check\"\n              />\n              <Button\n                disabled={loading}\n                onClick={() => setFiles([])}\n                icon=\"close\"\n              />\n            </Button.Group>\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent, useState } from \"react\";\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\nimport { Photo, Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfilePhotos({ profile }: Props) {\n  const {\n    profileStore: {\n      isCurrentUser,\n      uploadPhoto,\n      uploading,\n      loading,\n      setMainPhoto,\n      deletePhoto,\n    },\n  } = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState(\"\");\n\n  function handlePhotoUpload(file: Blob) {\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\n  }\n\n  function handleSetMainPhoto(\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  }\n\n  function handleDeletePhoto(\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(e.currentTarget.name);\n    deletePhoto(photo);\n  }\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget\n              uploadPhoto={handlePhotoUpload}\n              loading={uploading}\n            />\n          ) : (\n            <Card.Group itemsPerRow={5}>\n              {profile.photos?.map((photo) => (\n                <Card key={photo.id}>\n                  <Image src={photo.url} />\n                  {isCurrentUser && (\n                    <Button.Group fluid widths={2}>\n                      <Button\n                        basic\n                        color=\"violet\"\n                        content=\"Profile Pic\"\n                        name={\"main\" + photo.id}\n                        disabled={photo.isMain}\n                        loading={target === \"main\" + photo.id && loading}\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\n                      />\n                      <Button\n                        basic\n                        color=\"red\"\n                        icon=\"trash\"\n                        loading={target === photo.id && loading}\n                        onClick={(e) => handleDeletePhoto(photo, e)}\n                        disabled={photo.isMain}\n                        name={photo.id}\n                      />\n                    </Button.Group>\n                  )}\n                </Card>\n              ))}\n            </Card.Group>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n\n// import { observer } from \"mobx-react-lite\";\n// import React, { useState } from \"react\";\n// import { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\n// import PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\n// import { Profile } from \"../../app/models/profile\";\n// import { useStore } from \"../../app/stores/store\";\n\n// interface Props {\n//   profile: Profile;\n// }\n// export default observer(function ProfilePhotos({ profile }: Props) {\n//   const {\n//     profileStore: {\n//       isCurrentUser,\n//       uploadPhoto,\n//       uploading,\n//       setMainPhoto,\n//       loading,\n//     },\n//   } = useStore();\n//   const [addPhotoMode, setAddPhotoMode] = useState(false);\n\n//   function handlePhotoUpload(file: Blob) {\n//     uploadPhoto(file).then(() => setAddPhotoMode(false));\n//   }\n\n//   return (\n//     <Tab.Pane>\n//       <Grid>\n//         <Grid.Column width={16}>\n//           <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\n//           {isCurrentUser && (\n//             <Button\n//               floated=\"right\"\n//               basic\n//               content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\n//               onClick={() => setAddPhotoMode(!addPhotoMode)}\n//             />\n//           )}\n//         </Grid.Column>\n//         <Grid.Column width={16}>\n//           {addPhotoMode ? (\n//             <PhotoUploadWidget\n//               uploadPhoto={handlePhotoUpload}\n//               loading={uploading}\n//             />\n//           ) : (\n//             <Card.Group itemsPerRow={5}>\n//               {profile.photos?.map((photo) => (\n//                 <Card key={photo.id}>\n//                   <Image src={photo.url} />\n//                   {isCurrentUser && (\n//                     <Button.Group fluid widths={2}>\n//                       <Button\n//                         basic\n//                         color=\"blue\"\n//                         content=\"Main\"\n//                         name={photo.id}\n//                         disabled={photo.isMain}\n//                       />\n//                     </Button.Group>\n//                   )}\n//                 </Card>\n//               ))}\n//             </Card.Group>\n//           )}\n//         </Grid.Column>\n//       </Grid>\n//     </Tab.Pane>\n//   );\n// });\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileActivities from \"./ProfileActivities\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileFollowings from \"./ProfileFollowings\";\nimport ProfilePhotos from \"./ProfilePhotos\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileContent({ profile }: Props) {\n  const { profileStore } = useStore();\n\n  const panes = [\n    { menuItem: \"About\", render: () => <ProfileAbout /> },\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\n    { menuItem: \"Followers\", render: () => <ProfileFollowings /> },\n    { menuItem: \"Following\", render: () => <ProfileFollowings /> },\n  ];\n\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition=\"right\"\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n    />\n  );\n});\n\n// import React from \"react\";\n// import { Tab } from \"semantic-ui-react\";\n// import { Profile } from \"../../app/models/profile\";\n// import ProfileFollowings from \"./ProfileFollowings\";\n// import ProfilePhotos from \"./ProfilePhotos\";\n\n// interface Props {\n//   profile: Profile;\n// }\n\n// export default observer(function ProfileContent({ profile }: Props) {\n//   const panes = [\n//     { menuItem: \"About\", render: () => <Tab.Pane>About Content</Tab.Pane> },\n//     {\n//       menuItem: \"Photos\",\n//       render: () => <ProfilePhotos profile={profile} />,\n//     },\n//     {\n//       menuItem: \"Events\",\n//       render: () => <Tab.Pane>Events Content</Tab.Pane>,\n//     },\n//     {\n//       menuItem: \"Followers\",\n//       render: () => (\n//         <Tab.Pane>\n//           <ProfileFollowings />\n//         </Tab.Pane>\n//       ),\n//     },\n//     {\n//       menuItem: \"Following\",\n//       render: () => (\n//         <Tab.Pane>\n//           <ProfileFollowings />\n//         </Tab.Pane>\n//       ),\n//     },\n//   ];\n\n//   return (\n//     <Tab\n//       menu={{ fluid: true, vertical: true }}\n//       menuPosition=\"right\"\n//       panes={panes}\n//     />\n//   );\n// });\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport {\n  Divider,\n  Grid,\n  Header,\n  Item,\n  Segment,\n  Statistic,\n} from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileHeader({ profile }: Props) {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image\n                avatar\n                size=\"small\"\n                src={profile.image || \"/assets/user.png\"}\n              />\n              <Item.Content verticalAlign=\"middle\">\n                <Header as=\"h1\" content={profile.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label=\"Followers\" value={profile.followersCount} />\n            <Statistic label=\"Following\" value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile} />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n});\n\n// import { observer } from \"mobx-react-lite\";\n// import React from \"react\";\n// import {\n//   Button,\n//   Divider,\n//   Grid,\n//   Header,\n//   Item,\n//   Reveal,\n//   Segment,\n//   Statistic,\n// } from \"semantic-ui-react\";\n// import { Profile } from \"../../app/models/profile\";\n\n// interface Props {\n//   profile: Profile;\n// }\n\n// export default observer(function ProfileHeader({ profile }: Props) {\n//   return (\n//     <Segment>\n//       <Grid>\n//         <Grid.Column width={12}>\n//           <Item.Group>\n//             <Item>\n//               <Item.Image\n//                 avatar\n//                 size=\"small\"\n//                 src={profile.image || \"/assets/user.png\"}\n//               />\n//               <Item.Content verticalAlign=\"middle\">\n//                 <Header as=\"h1\" content={profile.displayName} />\n//               </Item.Content>\n//             </Item>\n//           </Item.Group>\n//         </Grid.Column>\n//         <Grid.Column width={4}>\n//           <Statistic.Group widths={2}>\n//             <Statistic label=\"Followers\" value=\"5\" />\n//             <Statistic label=\"Followers\" value=\"42\" />\n//           </Statistic.Group>\n//           <Divider />\n//           <Reveal animated=\"move\">\n//             <Reveal.Content visible style={{ width: \"100%\" }}>\n//               <Button fluid color=\"violet\" content=\"Following\" />\n//             </Reveal.Content>\n//             <Reveal.Content hidden style={{ width: \"100%\" }}>\n//               <Button\n//                 fluid\n//                 color={true ? \"green\" : \"green\"}\n//                 content={true ? \"follow\" : \"unfollow\"}\n//               />\n//             </Reveal.Content>\n//           </Reveal>\n//         </Grid.Column>\n//       </Grid>\n//     </Segment>\n//   );\n// });\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileContent from \"./ProfileContent\";\nimport ProfileHeader from \"./ProfileHeader\";\n\nexport default observer(function ProfilePage() {\n  const { username } = useParams<{ username: string }>();\n  const { profileStore } = useStore();\n  const { loadingProfile, loadProfile, profile } = profileStore;\n\n  useEffect(() => {\n    loadProfile(username);\n    return () => {};\n  }, [loadProfile, username]);\n\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\n\n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        {profile && (\n          <>\n            <ProfileHeader profile={profile} />\n            <ProfileContent profile={profile} />\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React from \"react\";\nimport {\n  Redirect,\n  Route,\n  RouteComponentProps,\n  RouteProps,\n} from \"react-router-dom\";\nimport { useStore } from \"../stores/store\";\n\ninterface Props extends RouteProps {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\n  const {\n    userStore: { isLoggedIn },\n  } = useStore();\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n// import { Activity } from \"../models/activity\";\n\n// import { List } from \"semantic-ui-react\";\n// import { companies } from './demo'\n// import Mnc from './company'\n\nfunction App() {\n  const location = useLocation(); //adding a key on a route\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded)\n    return <LoadingComponent content=\"Loading now...\" />;\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      {/* any route match  the \"/\" and this +particular route */}\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path=\"/activities\"\n                  component={ActivityDashboard}\n                />\n                <PrivateRoute\n                  path=\"/activities/:id\"\n                  component={ActivityDetails}\n                />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute\n                  path=\"/profiles/:username\"\n                  component={ProfilePage}\n                />\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./app/layout/style.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\n// import { BrowserRouter } from \"react-router-dom\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\nimport { createBrowserHistory } from \"history\";\n\nimport { Router } from \"react-router-dom\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}