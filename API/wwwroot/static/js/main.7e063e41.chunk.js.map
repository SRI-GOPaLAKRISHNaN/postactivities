{"version":3,"sources":["app/models/pagination.ts","app/models/activity.ts","app/api/agent.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/userStore.ts","app/stores/profileStore.ts","app/stores/commentStore.ts","app/stores/store.ts","app/layout/NavBar.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/common/util/hooks.ts","features/users/RegisterSuccess.tsx","features/users/ConfirmEmail.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","Object","createClass","data","pagination","classCallCheck","this","PagingParams","pageNumber","arguments","length","undefined","pageSize","Activity","init","assign","ActivityFormValues","activity","id","title","category","description","date","city","venue","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","concat","response","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","JSON","parse","abrupt","stop","_x","apply","error","_headers$wwwAuthenti","_ref2","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","startsWith","userStore","logout","setServerError","Promise","reject","responseBody","requests","url","get","then","body","put","post","delete","agent","Activities","list","params","details","create","update","attend","Account","current","login","user","register","fbLogin","accessToken","refreshToken","verifyEmail","email","resendEmailConfirm","Profiles","username","uploadPhoto","file","formData","FormData","append","Content-type","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Profile","displayName","image","ActivityStore","_this","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","result","axiosParams","sent","setActivity","setPagination","setLoadingInitial","t0","console","log","loadActivity","_callee2","_context2","getActivity","runInAction","_activity$attendees","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","_ref3","_callee3","attendee","newActivity","_context3","_x2","updateActivity","_ref4","_callee4","_context4","objectSpread2","_x3","deleteActivity","_ref5","_callee5","_context5","_x4","updateAttedance","_callee6","_context6","_this$selectedActivit","_this$selectedActivit2","filter","_this$selectedActivit3","_this$selectedActivit4","finish","cancelActivityToggle","_callee7","_context7","_this$selectedActivit5","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","toConsumableArray","CommonStore","window","localStorage","getItem","appLoaded","setToken","setAppLoaded","setItem","removeItem","ModalStore","modal","open","openModal","content","closeModal","UserStore","props","fbAccessToken","fbLoading","refreshTokenTimeout","creds","startRefreshTokenTimer","modalStore","getUser","setImage","setDisplayName","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","stopRefreshTokenTimer","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","_this$profile$photos","photos","isMain","p","_this$profile$photos2","activityStore","_store$userStore$user","_store$userStore$user2","followingCount","_x5","_x6","_ref6","_store$userStore$user3","_x7","loadFollowings","_ref7","_x8","loadUserActivities","_ref8","_callee8","_context8","_x9","_x10","CommentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","_this$hubConnection","clearComments","addComment","_store$activityStore$","_this$hubConnection2","invoke","profileStore","commentStore","StoreContext","createContext","useStore","useContext","observer","_useStore$userStore","isLoggedIn","react_default","createElement","Menu","inverted","fixed","Container","Item","as","NavLink","to","header","src","alt","style","marginRight","Fragment","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","MyTextInput","_useField","useField","_useField2","slicedToArray","field","meta","Form","Field","touched","lable","Label","basic","color","formik_esm","initialValues","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","Header","textAlign","placeholder","type","render","marginBottom","fluid","ValidationErrors","Message","List","map","err","i","validationSchema","Yup","required","isValid","dirty","disabled","_useStore","Segment","vertical","size","users_LoginForm","users_RegisterForm","Divider","horizontal","_useStore$activitySto","width","marginTop","attached","active","has","esm","onChange","_userStore$user","Reveal","animated","Content","visible","hidden","e","preventDefault","handleFollow","Card","Description","str","substring","truncate","bio","extra","Icon","profiles_FollowButton","styles","borderColor","borderWidth","Popup","hoverable","trigger","circular","bordered","profiles_ProfileCard","ActivityListItem","_activity$host","_activity$host2","Group","react_router_dom","secondary","dashboard_ActivityListItemAttendee","clearing","floated","groupedActivities","group","react","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","_useState","useState","_useState2","loadingNext","setLoadingNext","useEffect","Grid","Column","react_infinite_scroller_default","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","dashboard_ActivityList","dashboard_ActivityFilters","Loader","LoadingComponent","_ref$inverted","_ref$content","Dimmer","MyTextArea","label","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","react_datepicker_min_default","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","disableed","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","_ref$activity","relaxed","divided","Extra","details_ActivityDetailedHeader","details_ActivityDetailedInfo","details_ActivityDetailedChat","details_ActivityDetailedSidebar","TestErrors","baseUrl","widths","primary","NotFound","Inline","_commonStore$error","_commonStore$error2","message","Modal","onClose","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","setEditMode","_useStore$profileStor","isCurrentUser","profiles_ProfileEditForm","PhotoWidgetCropper","imagePreview","setCropper","react_cropper_es","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","_useDropzone","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","_useState3","_useState4","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","_profile$photos","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","profiles_ProfileAbout","profiles_ProfilePhotos","profiles_ProfileActivities","profiles_ProfileFollowings","menuPosition","Statistic","profiles_ProfileHeader","profiles_ProfileContent","PrivateRoute","Component","component","rest","objectWithoutProperties","_excluded","react_router","useQuery","useLocation","search","RegisterSuccess","success","ConfirmEmail","Status","Verifying","Failed","Success","setStatus","handleConfirmEmailResend","getBody","location","finally","react_toastify_esm","hideProgressBar","modals_ModalContainer","exact","path","HomePage","layout_NavBar","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","__webpack_exports__","src_history","createBrowserHistory","ReactDOM","Provider","layout_App","document","getElementById"],"mappings":"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","file":"static/js/main.7e063e41.chunk.js","sourcesContent":["export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n    data: T;\n    pagination: Pagination;\n\n    constructor(data: T, pagination: Pagination) {\n        this.data = data;\n        this.pagination = pagination;\n    }\n}\n\nexport class PagingParams {\n    pageNumber;\n    pageSize;\n\n    constructor(pageNumber = 1, pageSize = 2) {\n        this.pageNumber = pageNumber;\n        this.pageSize = pageSize;\n    }\n}","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n        id: string;\r\n        title: string;\r\n        date: Date | null;\r\n        description: string;\r\n        category: string;\r\n        city: string;\r\n        venue: string;\r\n        hostUsername: string;\r\n        isCancelled: boolean;\r\n        isGoing: boolean;\r\n        isHost: boolean;\r\n        host?: Profile;\r\n        attendees:Profile[]\r\n        \r\n}\r\n    \r\n export class Activity implements Activity {\r\n    constructor(init?: ActivityFormValues) {\r\n      Object.assign(this, init);\r\n    }\r\n  }\r\n\r\n  export class ActivityFormValues {\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(activity?: ActivityFormValues) {\r\n      if (activity) {\r\n        this.id = activity.id;\r\n        this.title = activity.title;\r\n        this.category = activity.category;\r\n        this.description = activity.description;\r\n        this.date = activity.date;\r\n        this.venue = activity.venue;\r\n        this.city = activity.city;\r\n      }\r\n    }\r\n  }","import { PaginatedResult } from './../models/pagination';\r\nimport { Photo, UserActivity } from './../models/profile';\r\nimport { ActivityFormValues } from './../models/activity';\r\nimport { UserFormValues } from './../models/user';\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Activity } from \"../models/activity\";\r\nimport { User } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\nimport { history } from '../..';\r\nimport { Profile } from '../models/profile';\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve,delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use ( config => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers!.Authorization = `Bearer ${token}`\r\n    return config;\r\n})\r\n\r\n//setinterval\r\naxios.interceptors.response.use(async response => {\r\n    if(process.env.NODE_ENV ==='development') \r\n    await sleep(500);\r\n    const pagination = response.headers['pagination']\r\n    if (pagination) {\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>\r\n    }\r\n    return response;\r\n\r\n    //sepecify error response\r\n}, (error: AxiosError) => {\r\n    const { data, status,config,headers } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n                 history.push('/not-found');\r\n            }\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateErrors.push(data.errors[key]);\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            } else {\r\n                toast.error(data)\r\n            }\r\n            break;\r\n        case 401:\r\n            if (status === 401 && headers['www-authenticate']?.startsWith('Bearer error=\"invalid_token\"')) {\r\n                store.userStore.logout();\r\n                toast.error('Session expired - please login again');\r\n            }\r\n            break\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n              history.push('/server-error');\r\n            break;\r\n    }\r\n    return Promise.reject(error)\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get:<T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    put:<T>(url: string,body:{}) => axios.put<T>(url,body).then(responseBody),\r\n    post:<T>(url: string,body:{}) => axios.post<T>(url,body).then(responseBody),\r\n    del:<T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', { params })\r\n        .then(responseBody),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    login:(user:UserFormValues) => requests.post<User>('/account/login',user),\r\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n    fbLogin: (accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n    refreshToken: () => requests.post<User>('/account/refreshToken', {}),\r\n    verifyEmail: (token: string, email: string) => \r\n        requests.post<void>(`/account/verifyEmail?token=${token}&email=${email}`, {}),\r\n    resendEmailConfirm: (email: string) => \r\n        requests.get(`/account/resendEmailConfirmationLink?email=${email}`)\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file: Blob) => {\r\n        let formData = new FormData();\r\n        formData.append('File', file);\r\n        return axios.post<Photo>('photos', formData, {\r\n            headers: { 'Content-type': 'multipart/form-data' }\r\n        })\r\n    },\r\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n    deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n    updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\r\n    updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\r\n    listFollowings: (username: string, predicate: string) =>\r\n        requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n    listActivities: (username: string, predicate: string) =>\r\n        requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities,Account,Profiles\r\n}\r\n\r\nexport default agent;","import { User } from \"./user\";\n\nexport interface Profile {\n    username: string;\n    displayName: string;\n    image?: string;\n    followersCount: number;\n    followingCount: number;\n    following: boolean;\n    bio?: string;\n    photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n    constructor(user: User) {\n        this.username = user.username;\n        this.displayName = user.displayName;\n        this.image = user.image;\n    }\n}\n\nexport interface Photo {\n    id: string;\n    url: string;\n    isMain: boolean;\n}\n\nexport interface UserActivity {\n    id: string;\n    title: string;\n    category: string;\n    date: Date;\n}","import { PagingParams } from './../models/pagination';\r\nimport { ActivityFormValues } from './../models/activity';\r\nimport { Activity } from '../models/activity';\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { format } from 'date-fns';\r\nimport { store } from './store';\r\nimport { Profile } from '../models/profile';\r\nimport { Pagination } from '../models/pagination';\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set('all',true)\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  \r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    )\r\n  }\r\n\r\n  setPagingParams=(pagingParams: PagingParams) => {\r\n  this.pagingParams = pagingParams;\r\n  }\r\n\r\n  \r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                if (key !== 'startDate') this.predicate.delete(key);\r\n            })\r\n        }\r\n        switch (predicate) {\r\n            case 'all':\r\n                resetPredicate();\r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isGoing':\r\n                resetPredicate();\r\n                this.predicate.set('isGoing', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n        }\r\n    } \r\n\r\n   get axiosParams() {\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if (key === 'startDate') {\r\n                params.append(key, (value as Date).toISOString())\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n\r\n  //get activity by date eg: activity 2 months ago instead 22.02.2022\r\n  get activitiesByDate() {\r\n        return Array.from(this.activityRegistry.values()).sort((a, b) =>\r\n            a.date!.getTime() - b.date!.getTime());\r\n    }\r\n\r\n//Grouping the activities assign single date for every activities\r\n  get groupedActivities() {\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((activities, activity) => {\r\n                const date = format(activity.date!, 'dd MMM yyyy');\r\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities;\r\n            }, {} as {[key: string]: Activity[]})\r\n        )\r\n    }\r\n\r\n\r\n  //create loading indicator\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams)\r\n      result.data.forEach(activity => {\r\n        this.setActivity(activity);\r\n      })\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  }\r\n  \r\n\r\n  //loading activity\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity((id));\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        })\r\n        this.setLoadingInitial(false)\r\n        return activity;\r\n      } catch (err) {\r\n        console.log(err);\r\n          this.setLoadingInitial(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        a => a.username === user.username\r\n      )\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\r\n    }\r\n    activity.date = new Date(activity.date!)\r\n       this.activityRegistry.set(activity.id,activity);\r\n  }\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  }\r\n\r\n  //set a loading \r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  //create an activity\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!)\r\n\r\n    // activity.id = uuid();\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      })\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  // update an activity\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updateActivity = { ...this.getActivity(activity.id), ...activity }\r\n          this.activityRegistry.set(activity.id, updateActivity as Activity);\r\n          this.selectedActivity = updateActivity as Activity;\r\n        }\r\n      })\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id)\r\n        this.loading = false;\r\n      })\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      })\r\n    }\r\n  }\r\n\r\n  updateAttedance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(a => a.username !== user?.username)\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(this.selectedActivity!.id,this.selectedActivity!)\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => this.loading = false);\r\n    }\r\n  }\r\n\r\n  //Cancel Attendance\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n        this.activityRegistry.set(this.selectedActivity!.id,this.selectedActivity!)\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => this.loading = false);\r\n    }\r\n  }\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  }\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach(activity => {\r\n      activity.attendees.forEach(attendee => {\r\n        if (attendee.username === username) {\r\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt',token)\r\n                } else {\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n   setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}\r\n\r\n// import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\n// import { makeAutoObservable, runInAction } from \"mobx\";\r\n// import { ChatComment } from \"../models/comment\";\r\n// import { store } from \"./store\";\r\n\r\n// export default class CommentStore {\r\n//     comments: ChatComment[] = [];\r\n//     hubConnection: HubConnection | null = null;\r\n\r\n//     constructor() {\r\n//         makeAutoObservable(this);\r\n//     }\r\n\r\n//     createHubConnection = (activityId: string) => {\r\n//         if (store.activityStore.selectedActivity) {\r\n//             this.hubConnection = new HubConnectionBuilder()\r\n//                 .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n//                     accessTokenFactory: () => store.userStore.user?.token!\r\n//                 })\r\n//                 .withAutomaticReconnect()\r\n//                 .configureLogging(LogLevel.Information)\r\n//                 .build();\r\n\r\n//             this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\r\n\r\n//             this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n//                 runInAction(() => {\r\n//                     comments.forEach(comment => {\r\n//                         comment.createdAt = new Date(comment.createdAt + 'Z');\r\n//                     })\r\n//                     this.comments = comments\r\n//                 });\r\n//             })\r\n\r\n//             this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n//                 runInAction(() => {\r\n//                     comment.createdAt = new Date(comment.createdAt);\r\n//                     this.comments.unshift(comment)\r\n//                 });\r\n//             })\r\n//         }\r\n//     }\r\n\r\n//     stopHubConnection = () => {\r\n//         this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error));\r\n//     }\r\n\r\n//     clearComments = () => {\r\n//         this.comments = [];\r\n//         this.stopHubConnection();\r\n//     }\r\n\r\n//     addComment = async (values: any) => {\r\n//         values.activityId = store.activityStore.selectedActivity?.id;\r\n//         try {\r\n//             await this.hubConnection?.invoke('SendComment', values);\r\n//         } catch (error) {\r\n//             console.log(error);\r\n//         }\r\n//     }\r\n    \r\n// }","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n    open: boolean;\n    body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n    modal: Modal = {\n        open: false,\n        body: null\n    }\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    openModal = (content: JSX.Element) => {\n        this.modal.open = true;\n        this.modal.body = content;\n    }\n\n    closeModal = () => {\n        this.modal.open = false;\n        this.modal.body = null;\n    }\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\nimport { history } from \"../..\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n    props: any;\r\n    fbAccessToken: string | null = null;\r\n    fbLoading = false;\r\n    refreshTokenTimeout: any;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token)\r\n            this.startRefreshTokenTimer(user);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n            console.log(user)\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n     getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            this.startRefreshTokenTimer(user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n     }\r\n\r\n      register = async (creds: UserFormValues) => {\r\n        try {\r\n            await agent.Account.register(creds);\r\n            history.push(`/account/registerSuccess?email=${creds.email}`);\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    setImage = (image: string) => {\r\n        if (this.user) this.user.image = image;\r\n    } \r\n\r\n    setDisplayName = (name: string) => {\r\n        if (this.user) this.user.displayName = name;\r\n    }\r\n\r\n    getFacebookLoginStatus = async () => {\r\n        window.FB.getLoginStatus(response => {\r\n            if (response.status === 'connected') {\r\n                this.fbAccessToken = response.authResponse.accessToken;\r\n            }\r\n        })\r\n    }\r\n\r\n   facebookLogin = () => {\r\n        this.fbLoading = true;\r\n        const apiLogin = (accessToken: string) => {\r\n            agent.Account.fbLogin(accessToken).then(user => {\r\n                store.commonStore.setToken(user.token);\r\n                this.startRefreshTokenTimer(user);\r\n                runInAction(() => {\r\n                    this.user = user;\r\n                    this.fbLoading = false;\r\n                })\r\n                history.push('/activities');\r\n            }).catch(error => {\r\n                console.log(error);\r\n                runInAction(() => this.fbLoading = false);\r\n            })\r\n        }\r\n        if (this.fbAccessToken) {\r\n            apiLogin(this.fbAccessToken);\r\n        } else {\r\n            window.FB.login(response => {\r\n                apiLogin(response.authResponse.accessToken);\r\n            }, {scope: 'public_profile,email'})\r\n        }\r\n    }\r\n    refreshToken = async () => {\r\n        this.stopRefreshTokenTimer();\r\n        try {\r\n            const user = await agent.Account.refreshToken();\r\n            runInAction(() => this.user = user);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n        private startRefreshTokenTimer(user: User) {\r\n        const jwtToken = JSON.parse(atob(user.token.split('.')[1]));\r\n        const expires = new Date(jwtToken.exp * 1000);\r\n        const timeout = expires.getTime() - Date.now() - (60 * 1000);\r\n        this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\r\n    }\r\n\r\n    private stopRefreshTokenTimer() {\r\n        clearTimeout(this.refreshTokenTimeout);\r\n    }\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { store } from \"./store\";\n// import agent from \"../api/agent\";\n// import { Photo, Profile, UserActivity } from \"../models/profile\";\n// import { store } from \"./store\";\n\n// export default class ProfileStore {\n//     profile: Profile | null = null;\n//     loadingProfile = false;\n//     uploading = false;\n//     loading = false;\n//     followings: Profile[] = [];\n//     loadingFollowings = false;\n//     activeTab = 0;\n    // userActivities: UserActivity[] = [];\n    // loadingActivities = false;\n\n//     constructor() {\n//         makeAutoObservable(this);\n\n//         reaction(\n//             () => this.activeTab,\n//             activeTab => {\n//                 if (activeTab === 3 || activeTab === 4) {\n//                     const predicate = activeTab === 3 ? 'followers' : 'following';\n//                     this.loadFollowings(predicate);\n//                 } else {\n//                     this.followings = [];\n//                 }\n//             }\n//         )\n//     }\n\n    // setActiveTab = (activeTab: any) => {\n    //     this.activeTab = activeTab;\n    // }\n\n    // get isCurrentUser() {\n    //     if (store.userStore.user && this.profile) {\n    //         return store.userStore.user.username === this.profile.username;\n    //     }\n    //     return false;\n    // }\n\n//     loadProfile = async (username: string) => {\n//         this.loadingProfile = true;\n//         try {\n//             const profile = await agent.Profiles.get(username);\n//             runInAction(() => {\n//                 this.profile = profile;\n//                 this.loadingProfile = false;\n//             })\n//         } catch (error) {\n//             console.log(error);\n//             runInAction(() => this.loadingProfile = false);\n//         }\n//     }\n\n    // uploadPhoto = async (file: Blob) => {\n    //     this.uploading = true;\n    //     try {\n    //         const response = await agent.Profiles.uploadPhoto(file);\n    //         const photo = response.data;\n    //         runInAction(() => {\n    //             if (this.profile) {\n    //                 this.profile.photos?.push(photo);\n    //                 if (photo.isMain && store.userStore.user) {\n    //                     store.userStore.setImage(photo.url);\n    //                     this.profile.image = photo.url;\n    //                 }\n    //             }\n    //             this.uploading = false;\n    //         })\n    //     } catch (error) {   \n    //         console.log(error);\n    //         runInAction(() => this.uploading = false);\n    //     }\n    // }\n\n    // setMainPhoto = async (photo: Photo) => {\n    //     this.loading = true;\n    //     try {\n    //         await agent.Profiles.setMainPhoto(photo.id);\n    //         store.userStore.setImage(photo.url);\n    //         runInAction(() => {\n    //             if (this.profile && this.profile.photos) {\n    //                 this.profile.photos.find(p => p.isMain)!.isMain = false;\n    //                 this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n    //                 this.profile.image = photo.url;\n    //                 this.loading = false;\n    //             }\n    //         })\n    //     } catch (error) {\n    //         runInAction(() => this.loading = false);\n    //         console.log(error);\n    //     }\n    // }\n\n    // deletePhoto = async (photo: Photo) => {\n    //     this.loading = true;\n    //     try {\n    //         await agent.Profiles.deletePhoto(photo.id);\n    //         runInAction(() => {\n    //             if (this.profile) {\n    //                 this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\n    //                 this.loading = false;\n    //             }\n    //         })\n    //     } catch (error) {\n    //         runInAction(() => this.loading = false);\n    //         console.log(error);\n    //     }\n    // }\n\n//     updateProfile = async (profile: Partial<Profile>) => {\n//         this.loading = true;\n//         try {\n//             await agent.Profiles.updateProfile(profile);\n//             runInAction(() => {\n//                 if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\n//                     store.userStore.setDisplayName(profile.displayName);\n//                 }\n//                 this.profile = {...this.profile, ...profile as Profile};\n//                 this.loading = false;\n//             })\n//         } catch (error) {\n//             console.log(error);\n//             runInAction(() => this.loading = false);\n//         }\n//     }\n\n    // updateFollowing = async (username: string, following: boolean) => {\n    //     this.loading = true;\n    //     try {\n    //         await agent.Profiles.updateFollowing(username);\n    //         store.activityStore.updateAttendeeFollowing(username);\n    //         runInAction(() => {\n    //             if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\n    //                 following ? this.profile.followersCount++ : this.profile.followersCount--;\n    //                 this.profile.following = !this.profile.following;\n    //             }\n    //             if (this.profile && this.profile.username === store.userStore.user?.username) {\n    //                 following ? this.profile.followingCount++ : this.profile.followingCount--;\n    //             }\n    //             this.followings.forEach(profile => {\n    //                 if (profile.username === username) {\n    //                     profile.following ? profile.followersCount-- : profile.followersCount++;\n    //                     profile.following = !profile.following;\n    //                 }\n    //             })\n    //             this.loading = false;\n    //         })\n    //     } catch (error) {\n    //         console.log(error);\n    //         runInAction(() => this.loading = false);\n    //     }\n    // }\n\n//     loadFollowings = async (predicate: string) => {\n//         this.loadingFollowings = true;\n//         try {\n//             const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n//             runInAction(() => {\n//                 this.followings = followings;\n//                 this.loadingFollowings = false;\n//             })\n//         } catch (error) {\n//             runInAction(() => this.loadingFollowings = false);\n//         }\n//     }\n\n//     loadUserActivities = async (username: string, predicate?: string) => {\n//         this.loadingActivities = true;\n//         try {\n//             const activities = await agent.Profiles.listActivities(username, predicate!);\n//             runInAction(() => {\n//                 this.userActivities = activities;\n//                 this.loadingActivities = false;\n//             })\n//         } catch (error) {\n//             console.log(error);\n//             runInAction(() => {\n//                 this.loadingActivities = false;\n//             })\n//         }\n//     }\n\n// }\n\nexport default class ProfileStore {\n    profile: Profile | null = null;\n    loadingProfile = false;\n    uploading = false;\n    loading = false;\n    followings: Profile[] = [];\n    loadingFollowings = false;\n    activeTab = 0;\n    userActivities: UserActivity[] = [];\n    loadingActivities = false;\n\n    constructor() {\n        makeAutoObservable(this);\n\n        reaction(\n            () => this.activeTab,\n            activeTab => {\n                if (activeTab === 3 || activeTab === 4) {\n                    const predicate = activeTab === 3 ? 'followers' : 'following';\n                    this.loadFollowings(predicate);\n                } else {\n                    this.followings = [];\n                }\n            }\n        )\n    }\n    setActiveTab = (activeTab: any) => {\n        this.activeTab = activeTab;\n    }\n    \n    get isCurrentUser() {\n        if (store.userStore.user && this.profile) {\n            return store.userStore.user.username === this.profile.username;\n        }\n        return false;\n    }\n\n    loadProfile = async (username: string) => {\n        this.loadingProfile = true;\n        try {\n            const profile = await agent.Profiles.get(username);\n            runInAction(() => {\n                this.profile = profile;\n                this.loadingProfile = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loadingProfile = false);\n        }\n    }\n\n        uploadPhoto = async (file: Blob) => {\n        this.uploading = true;\n        try {\n            const response = await agent.Profiles.uploadPhoto(file);\n            const photo = response.data;\n            runInAction(() => {\n                if (this.profile) {\n                    this.profile.photos?.push(photo);\n                    if (photo.isMain && store.userStore.user) {\n                        store.userStore.setImage(photo.url);\n                        this.profile.image = photo.url;\n                    }\n                }\n                this.uploading = false;\n            })\n        } catch (error) {   \n            console.log(error);\n            runInAction(() => this.uploading = false);\n        }\n        }\n        setMainPhoto = async (photo: Photo) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.setMainPhoto(photo.id);\n            store.userStore.setImage(photo.url);\n            runInAction(() => {\n                if (this.profile && this.profile.photos) {\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n                    this.profile.image = photo.url;\n                    this.loading = false;\n                }\n            })\n        } catch (error) {\n            runInAction(() => this.loading = false);\n            console.log(error);\n        }\n    }\n\n    deletePhoto = async (photo: Photo) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.deletePhoto(photo.id);\n            runInAction(() => {\n                if (this.profile) {\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\n                    this.loading = false;\n                }\n            })\n        } catch (error) {\n            runInAction(() => this.loading = false);\n            console.log(error);\n        }\n    }\n    updateFollowing = async (username: string, following: boolean) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.updateFollowing(username);\n            store.activityStore.updateAttendeeFollowing(username);\n            runInAction(() => {\n                if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\n                    this.profile.following = !this.profile.following;\n                }\n                if (this.profile && this.profile.username === store.userStore.user?.username) {\n                    following ? this.profile.followingCount++ : this.profile.followingCount--;\n                }\n                this.followings.forEach(profile => {\n                    if (profile.username === username) {\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\n                        profile.following = !profile.following;\n                    }\n                })\n                this.loading = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loading = false);\n        }\n    }\n    \n    updateProfile = async (profile: Partial<Profile>) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.updateProfile(profile);\n            runInAction(() => {\n                if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\n                    store.userStore.setDisplayName(profile.displayName);\n                }\n                this.profile = {...this.profile, ...profile as Profile};\n                this.loading = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loading = false);\n        }\n    }\n    \n    \n    loadFollowings = async (predicate: string) => {\n        this.loading = true;\n        try {\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n            runInAction(() => {\n                this.followings = followings\n                this.loadingFollowings = false;\n            })\n        } catch (error) {\n            console.log(error)\n            runInAction(() => this.loadingFollowings = false);\n        }\n    }\n\n      loadUserActivities = async (username: string, predicate?: string) => {\n        this.loadingActivities = true;\n        try {\n            const activities = await agent.Profiles.listActivities(username, predicate!);\n            runInAction(() => {\n                this.userActivities = activities;\n                this.loadingActivities = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => {\n                this.loadingActivities = false;\n            })\n        }\n    }\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { ChatComment } from \"../models/comment\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n    comments: ChatComment[] = [];\n    hubConnection: HubConnection | null = null;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    createHubConnection = (activityId: string) => {\n        if (store.activityStore.selectedActivity) {\n            this.hubConnection = new HubConnectionBuilder()\n                .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\n                    accessTokenFactory: () => store.userStore.user?.token!\n                })\n                .withAutomaticReconnect()\n                .configureLogging(LogLevel.Information)\n                .build();\n\n            this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\n\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\n                runInAction(() => {\n                    comments.forEach(comment => {\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\n                    })\n                    this.comments = comments\n                });\n            })\n\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\n                runInAction(() => {\n                    comment.createdAt = new Date(comment.createdAt);\n                    this.comments.unshift(comment)\n                });\n            })\n        }\n    }\n\n    stopHubConnection = () => {\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error));\n    }\n\n    clearComments = () => {\n        this.comments = [];\n        this.stopHubConnection();\n    }\n\n    addComment = async (values: any) => {\n        values.activityId = store.activityStore.selectedActivity?.id;\n        try {\n            await this.hubConnection?.invoke('SendComment', values);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}","import { createContext, useContext } from \"react\";\r\n// import { Activity } from \"../models/activity\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport UserStore from \"./userStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport CommentStore from \"./commentStore\";\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext)\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout, isLoggedIn },\r\n  } = useStore();\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" header>\r\n          <img\r\n            src=\"assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"5px\" }}\r\n          />\r\n          PostActivitiesPlatform\r\n        </Menu.Item>\r\n        {isLoggedIn && (\r\n          <>\r\n            <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\r\n            <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n            <Menu.Item>\r\n              <Button\r\n                as={NavLink}\r\n                to=\"/createActivity\"\r\n                positive\r\n                content=\"Create Activity\"\r\n              />\r\n            </Menu.Item>\r\n            <Menu.Item position=\"right\">\r\n              <Image\r\n                src={user?.image || \"/assets/user.png\"}\r\n                avatar\r\n                spaced=\"right\"\r\n              />\r\n              <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    as={Link}\r\n                    to={`/profiles/${user?.username}`}\r\n                    text=\"My profile\"\r\n                    icon=\"user\"\r\n                  />\r\n                  <Dropdown.Item onClick={logout} text=\"logout\" icon=\"power\" />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Menu.Item>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  lable?: string;\r\n  type?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.lable}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\n\nexport default observer(function LoginForm() {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\", error: null }}\n      onSubmit={(values, { setErrors }) =>\n        userStore\n          .login(values)\n          .catch((error) => setErrors({ error: error.response.data }))\n      }\n    >\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n          <Header\n            as=\"h2\"\n            content=\"Login to Platform\"\n            color=\"black\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n              <Label\n                style={{ marginBottom: 10 }}\n                basic\n                color=\"red\"\n                content={errors.error}\n              />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            positive\n            content=\"Login\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport ValidationErrors from \"../errors/ValidationErrors\";\n\nexport default observer(function RegisterForm() {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{\n        displayName: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        error: null,\n      }}\n      onSubmit={(values, { setErrors }) =>\n        userStore.register(values).catch((error) => setErrors({ error }))\n      }\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form\n          className=\"ui form error\"\n          onSubmit={handleSubmit}\n          autoComplete=\"off\"\n        >\n          <Header\n            as=\"h2\"\n            content=\"Sign up to activites\"\n            color=\"black\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => <ValidationErrors errors={errors.error} />}\n          />\n          <Button\n            disabled={!isValid || !dirty || isSubmitting}\n            loading={isSubmitting}\n            positive\n            content=\"Register\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Segment,\r\n  Image,\r\n  Button,\r\n  Divider,\r\n} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"banner\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          PostActivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to the activities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Hit to Proceed Activity page!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register!\r\n            </Button>\r\n            <Divider horizontal inverted>\r\n              Or\r\n            </Divider>\r\n            <Button\r\n              loading={userStore.fbLoading}\r\n              size=\"huge\"\r\n              inverted\r\n              color=\"black\"\r\n              content=\"Login with Facebook\"\r\n              onClick={userStore.facebookLogin}\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\r\n        <Header icon=\"filter\" attached color=\"blue\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All Activites\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent } from \"react\";\nimport { Reveal, Button } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function FollowButton({ profile }: Props) {\n  const { profileStore, userStore } = useStore();\n  const { updateFollowing, loading } = profileStore;\n\n  if (userStore.user?.username === profile.username) return null;\n\n  function handleFollow(e: SyntheticEvent, username: string) {\n    e.preventDefault();\n    profile.following\n      ? updateFollowing(username, false)\n      : updateFollowing(username, true);\n  }\n\n  return (\n    <Reveal animated=\"move\">\n      <Reveal.Content visible style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          color=\"green\"\n          content={profile.following ? \"Following\" : \"Not following\"}\n        />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          basic\n          color={profile.following ? \"red\" : \"green\"}\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\n          loading={loading}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </Reveal.Content>\n    </Reveal>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileCard({ profile }: Props) {\n  function truncate(str: string | undefined) {\n    if (str) {\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\n    }\n  }\n\n  return (\n    <Card\n      style={{ width: \"13rem\" }}\n      as={Link}\n      to={`/profiles/${profile.username}`}\n    >\n      <Image src={profile.image || \"/assets/user.png\"} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name=\"user\" />\n        {profile.followersCount} followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Image, List, Popup } from \"semantic-ui-react\";\nimport { Profile } from \"../../../app/models/profile\";\nimport ProfileCard from \"../../profiles/ProfileCard\";\n\ninterface Props {\n  attendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendee({\n  attendees,\n}: Props) {\n  const styles = {\n    borderColor: \"LimeGreen  \",\n    borderWidth: 3,\n  };\n\n  return (\n    <List horizontal>\n      {attendees.map((attendee) => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item\n              key={attendee.username}\n              as={Link}\n              to={`/profiles/${attendee.username}`}\n            >\n              <Image\n                size=\"mini\"\n                circular\n                src={attendee.image || \"/assets/user.png\"}\n                bordered\n                style={attendee.following ? styles : null}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} />\n          </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  );\n});\n\n","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            attached=\"top\"\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              style={{ marginBottom: 3 }}\r\n              size=\"tiny\"\r\n              circular\r\n              src={activity.host?.image || \"/assets/user.png\"}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted By\r\n                <Link to={`/profiles/${activity.hostUsername}`}>\r\n                  {activity.host?.displayName}\r\n                </Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are hosting to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" />\r\n          {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\r\n          <Icon name=\"marker\" />\r\n          {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"blue\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","// import { observer } from \"mobx-react-lite\";\r\n// import React, { Fragment } from \"react\";\r\n// import { Header } from \"semantic-ui-react\";\r\n// import { useStore } from \"../../../app/stores/store\";\r\n// import ActivityListItem from \"./ActivityListItem\";\r\n\r\n// export default observer(function ActivityList() {\r\n//   const { activityStore } = useStore();\r\n\r\n//   const { groupedActivities } = activityStore;\r\n\r\n//   return (\r\n//     //assign single date for every activities\r\n//     <>\r\n//       {groupedActivities.map(([group, activities]) => (\r\n//         <Fragment key={group}>\r\n//           <Header sub color=\"green\">\r\n//             {group}\r\n//           </Header>\r\n//           {activities.map((activity) => (\r\n//             <ActivityListItem key={activity.id} activity={activity} />\r\n//           ))}\r\n//         </Fragment>\r\n//       ))}\r\n//     </>\r\n//   );\r\n// });\r\n\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"green\">\r\n            {group}\r\n          </Header>\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from \"react\";\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\n\nexport default function ActivityListItemPlaceholder() {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 25 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\n//StructureList\r\nexport default observer(function ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const { loadActivities, activityRegistry, setPagingParams, pagination } =\r\n    activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) loadActivities();\r\n  }, [activityRegistry.size, loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean; //? denotes an optional parameter\r\n  content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({\r\n  inverted = true,\r\n  content = \"Loading...\",\r\n}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />;\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  rows: number;\n  label?: string;\n}\n\nexport default function MyTextArea(props: Props) {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label, Select } from 'semantic-ui-react';\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    options: any;\n    label?: string;\n}\n\nexport default function MySelectInput(props: Props) {\n    const [field, meta, helpers] = useField(props.name); \n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <Select \n                clearable\n                options={props.options}\n                value={field.value || null}\n                onChange={(e, d) => helpers.setValue(d.value)}\n                onBlur={() => helpers.setTouched(true)}\n                placeholder={props.placeholder}\n            />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    )\n}","export const categoryOptions = [\n    {text: 'Gaming', value: 'games'},\n    {text: 'Culture', value: 'culture'},\n    {text: 'Movie', value: 'film'},\n    {text: 'Coding', value: 'coding'},\n    {text: 'Programming', value: 'programs'},\n    {text: 'Travel', value: 'travel' },\n    {text: 'Music', value: 'music' },\n    {text: 'Texting', value: 'texting' },\n    {text: 'Drinks', value: 'drinks' }\n]","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\n  const [field, meta, helpers] = useField(props.name!);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <DatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={(value) => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n\r\n  const { updateActivity, createActivity, loadActivity, loadingInitial } =\r\n    activityStore;\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The title cannot be empty...\"),\r\n    description: Yup.string().required(\"The description cannot be empty...\"),\r\n    category: Yup.string().required(\"The category cannot be empty...\"),\r\n    date: Yup.string().required(\"The date is  required...\").nullable(),\r\n    city: Yup.string().required(\"The city is  required...\"),\r\n    venue: Yup.string().required(\"The venue is  required...\"),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      loadActivity(id).then((activity) =>\r\n        setActivity(new ActivityFormValues(activity))\r\n      );\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() =>\r\n        history.push(`/activities/${newActivity.id}`)\r\n      );\r\n    } else {\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity\" />;\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" sub color=\"blue\" />\r\n      {/* {/* enableReinitialize * it is used to manage the activities/ } */}\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\r\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\r\n            <MySelectInput\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n              options={categoryOptions}\r\n            />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location Details\" sub color=\"blue\" />\r\n            <MyTextInput placeholder=\"City\" name=\"city\" />\r\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              disableed={isSubmitting || !dirty || !isValid}\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/activities\"\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { formatDistanceToNow } from \"date-fns\";\r\nimport { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"violet\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n          initialValues={{ body: \"\" }}\r\n          validationSchema={Yup.object({\r\n            body: Yup.string().required(),\r\n          })}\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Type your comment(Press Enter to submit, SHIFT + ENTER for new line)\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === \"Enter\" && e.shiftKey) {\r\n                          return;\r\n                        }\r\n                        if (e.key === \"Enter\" && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)}</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(60%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttedance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{\r\n              position: \"absolute\",\r\n              zIndex: 1000,\r\n              left: -14,\r\n              top: 20,\r\n            }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p> {format(activity.date!, \"dd MMM yyyy \")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ?  \"blue\" : \"red\"}\r\n              floated=\"left\"\r\n              basic\r\n              content={\r\n                activity.isCancelled\r\n                  ? \"Re-activate Activity\"\r\n                  : \"Cancel Activity\"\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              as={Link}\r\n              disabled={activity.isCancelled}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"blue\"\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={updateAttedance} color=\"red\">\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={activity.isCancelled}\r\n            loading={loading}\r\n            onClick={updateAttedance}\r\n            color=\"black\"\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"orange\" name=\"info circle\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar alternate\" size=\"large\" color=\"grey\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"location arrow\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({\r\n  activity: { attendees, host },\r\n}: Props) {\r\n  if (!attendees) return null;\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"violet\"\r\n      >\r\n        {attendees.length}\r\n        {attendees.length === 1 ? \"Person\" : \" \" + \"People\"} Walkthrough\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"pink\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && (\r\n                  <Item.Extra style={{ color: \"Crimson\" }}>\r\n                    Following\r\n                  </Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponent />;\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n        <Grid.Column width={6}>\r\n          <ActivityDetailedSidebar activity={activity} />\r\n        </Grid.Column>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n  //Hit an API\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorised\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios.get(baseUrl + \"activities/notaguid\").catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Error 404: Oops! The page you are looking for cannot be found..\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to activities page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"violet\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"blue\" />\r\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { useStore } from \"../../stores/store\";\n\nexport default observer(function ModalContainer() {\n  const { modalStore } = useStore();\n\n  return (\n    <Modal\n      open={modalStore.modal.open}\n      onClose={modalStore.closeModal}\n      size=\"mini\"\n    >\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\n    </Modal>\n  );\n});\n","import React, { SyntheticEvent, useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { UserActivity } from \"../../app/models/profile\";\nimport { format } from \"date-fns\";\nimport { useStore } from \"../../app/stores/store\";\n\nconst panes = [\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\n];\n\nexport default observer(function ProfileActivities() {\n  const { profileStore } = useStore();\n  const { loadUserActivities, profile, loadingActivities, userActivities } =\n    profileStore;\n\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadUserActivities(\n      profile!.username,\n      panes[data.activeIndex as number].pane.key\n    );\n  };\n\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {userActivities.map((activity: UserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}\n              >\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\n                  <Card.Meta textAlign=\"center\">\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import React from \"react\";\nimport { Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button } from \"semantic-ui-react\";\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\n\ninterface Props {\n  setEditMode: (editMode: boolean) => void;\n}\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\n  const {\n    profileStore: { profile, updateProfile },\n  } = useStore();\n  return (\n    <Formik\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\n      onSubmit={(values) => {\n        updateProfile(values).then(() => {\n          setEditMode(false);\n        });\n      }}\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n      })}\n    >\n      {({ isSubmitting, isValid, dirty }) => (\n        <Form className=\"ui form\">\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\n          <Button\n            positive\n            type=\"submit\"\n            loading={isSubmitting}\n            content=\"Update profile\"\n            floated=\"right\"\n            disabled={!isValid || !dirty}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import React, { useState } from \"react\";\nimport { useStore } from \"../../app/stores/store\";\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\nimport ProfileEditForm from \"./ProfileEditForm\";\nimport { observer } from \"mobx-react-lite\";\n\nexport default observer(function ProfileAbout() {\n  const { profileStore } = useStore();\n  const { isCurrentUser, profile } = profileStore;\n  const [editMode, setEditMode] = useState(false);\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width=\"16\">\n          <Header\n            floated=\"left\"\n            icon=\"user\"\n            content={`About ${profile?.displayName}`}\n          />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\n              onClick={() => setEditMode(!editMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width=\"16\">\n          {editMode ? (\n            <ProfileEditForm setEditMode={setEditMode} />\n          ) : (\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import React from \"react\";\nimport { Tab, Grid, Header, Card } from \"semantic-ui-react\";\nimport ProfileCard from \"./ProfileCard\";\nimport { useStore } from \"../../app/stores/store\";\nimport { observer } from \"mobx-react-lite\";\n\nexport default observer(function ProfileFollowings() {\n  const { profileStore } = useStore();\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\n\n  return (\n    <Tab.Pane loading={loadingFollowings}>\n      <Grid>\n        <Grid.Column width=\"16\">\n          <Header\n            floated=\"left\"\n            icon=\"user\"\n            content={\n              activeTab === 3\n                ? `People following ${profile!.displayName}`\n                : `People ${profile?.displayName} is following`\n            }\n          />\n        </Grid.Column>\n        <Grid.Column width=\"16\">\n          <Card.Group itemsPerRow={4}>\n            {followings.map((profile) => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import React from \"react\";\nimport { Cropper } from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\ninterface Props {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper({\n  imagePreview,\n  setCropper,\n}: Props) {\n  return (\n    <Cropper\n      src={imagePreview}\n      style={{ height: 200, width: \"100%\" }}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview=\".img-preview\"\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={(cropper) => setCropper(cropper)}\n    />\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\n  const dzStyles = {\n    border: \"dashed 3px #eee\",\n    borderColor: \"#eee\",\n    borderRadius: \"5px\",\n    paddingTop: \"30px\",\n    textAlign: \"center\" as \"center\",\n    height: 200,\n  };\n\n  const dzActive = {\n    borderColor: \"green\",\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file: any) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n    [setFiles]\n  );\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div\n      {...getRootProps()}\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\n    >\n      <input {...getInputProps()} />\n      <Icon name=\"upload\" size=\"huge\" />\n      <Header content=\"Drop image here\" />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\n\ninterface Props {\n  loading: boolean;\n  uploadPhoto: (file: Blob) => void;\n}\n\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\n  const [files, setFiles] = useState<any>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n\n  function onCrop() {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\n    };\n  }, [files]);\n\n  return (\n    <Grid>\n      <Grid.Column width={4}>\n        <Header sub color=\"blue\" content=\"Step 1 - Add Photo\" />\n        <PhotoWidgetDropzone setFiles={setFiles} />\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color=\"blue\" content=\"Step 2 - Resize image\" />\n        {files && files.length > 0 && (\n          <PhotoWidgetCropper\n            setCropper={setCropper}\n            imagePreview={files[0].preview}\n          />\n        )}\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color=\"blue\" content=\"Step 3 - Preview & Upload\" />\n        {files && files.length > 0 && (\n          <>\n            <div\n              className=\"img-preview\"\n              style={{ minHeight: 400, overflow: \"hidden\" }}\n            />\n            <Button.Group widths={2}>\n              <Button\n                loading={loading}\n                onClick={onCrop}\n                positive\n                icon=\"check\"\n              />\n              <Button\n                disabled={loading}\n                onClick={() => setFiles([])}\n                icon=\"close\"\n              />\n            </Button.Group>\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent, useState } from \"react\";\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\nimport { Photo, Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfilePhotos({ profile }: Props) {\n  const {\n    profileStore: {\n      isCurrentUser,\n      uploadPhoto,\n      uploading,\n      loading,\n      setMainPhoto,\n      deletePhoto,\n    },\n  } = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState(\"\");\n\n  function handlePhotoUpload(file: Blob) {\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\n  }\n\n  function handleSetMainPhoto(\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  }\n\n  function handleDeletePhoto(\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(e.currentTarget.name);\n    deletePhoto(photo);\n  }\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget\n              uploadPhoto={handlePhotoUpload}\n              loading={uploading}\n            />\n          ) : (\n            <Card.Group itemsPerRow={5}>\n              {profile.photos?.map((photo) => (\n                <Card key={photo.id}>\n                  <Image src={photo.url} />\n                  {isCurrentUser && (\n                    <Button.Group fluid widths={2}>\n                      <Button\n                        basic\n                        color=\"violet\"\n                        content=\"Profile Pic\"\n                        name={\"main\" + photo.id}\n                        disabled={photo.isMain}\n                        loading={target === \"main\" + photo.id && loading}\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\n                      />\n                      <Button\n                        basic\n                        color=\"red\"\n                        icon=\"trash\"\n                        loading={target === photo.id && loading}\n                        onClick={(e) => handleDeletePhoto(photo, e)}\n                        disabled={photo.isMain}\n                        name={photo.id}\n                      />\n                    </Button.Group>\n                  )}\n                </Card>\n              ))}\n            </Card.Group>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n\n// import { observer } from \"mobx-react-lite\";\n// import React, { useState } from \"react\";\n// import { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\n// import PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\n// import { Profile } from \"../../app/models/profile\";\n// import { useStore } from \"../../app/stores/store\";\n\n// interface Props {\n//   profile: Profile;\n// }\n// export default observer(function ProfilePhotos({ profile }: Props) {\n//   const {\n//     profileStore: {\n//       isCurrentUser,\n//       uploadPhoto,\n//       uploading,\n//       setMainPhoto,\n//       loading,\n//     },\n//   } = useStore();\n//   const [addPhotoMode, setAddPhotoMode] = useState(false);\n\n//   function handlePhotoUpload(file: Blob) {\n//     uploadPhoto(file).then(() => setAddPhotoMode(false));\n//   }\n\n//   return (\n//     <Tab.Pane>\n//       <Grid>\n//         <Grid.Column width={16}>\n//           <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\n//           {isCurrentUser && (\n//             <Button\n//               floated=\"right\"\n//               basic\n//               content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\n//               onClick={() => setAddPhotoMode(!addPhotoMode)}\n//             />\n//           )}\n//         </Grid.Column>\n//         <Grid.Column width={16}>\n//           {addPhotoMode ? (\n//             <PhotoUploadWidget\n//               uploadPhoto={handlePhotoUpload}\n//               loading={uploading}\n//             />\n//           ) : (\n//             <Card.Group itemsPerRow={5}>\n//               {profile.photos?.map((photo) => (\n//                 <Card key={photo.id}>\n//                   <Image src={photo.url} />\n//                   {isCurrentUser && (\n//                     <Button.Group fluid widths={2}>\n//                       <Button\n//                         basic\n//                         color=\"blue\"\n//                         content=\"Main\"\n//                         name={photo.id}\n//                         disabled={photo.isMain}\n//                       />\n//                     </Button.Group>\n//                   )}\n//                 </Card>\n//               ))}\n//             </Card.Group>\n//           )}\n//         </Grid.Column>\n//       </Grid>\n//     </Tab.Pane>\n//   );\n// });\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileActivities from \"./ProfileActivities\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileFollowings from \"./ProfileFollowings\";\nimport ProfilePhotos from \"./ProfilePhotos\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileContent({ profile }: Props) {\n  const { profileStore } = useStore();\n\n  const panes = [\n    { menuItem: \"About\", render: () => <ProfileAbout /> },\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\n    { menuItem: \"Followers\", render: () => <ProfileFollowings /> },\n    { menuItem: \"Following\", render: () => <ProfileFollowings /> },\n  ];\n\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition=\"right\"\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n    />\n  );\n});\n\n// import React from \"react\";\n// import { Tab } from \"semantic-ui-react\";\n// import { Profile } from \"../../app/models/profile\";\n// import ProfileFollowings from \"./ProfileFollowings\";\n// import ProfilePhotos from \"./ProfilePhotos\";\n\n// interface Props {\n//   profile: Profile;\n// }\n\n// export default observer(function ProfileContent({ profile }: Props) {\n//   const panes = [\n//     { menuItem: \"About\", render: () => <Tab.Pane>About Content</Tab.Pane> },\n//     {\n//       menuItem: \"Photos\",\n//       render: () => <ProfilePhotos profile={profile} />,\n//     },\n//     {\n//       menuItem: \"Events\",\n//       render: () => <Tab.Pane>Events Content</Tab.Pane>,\n//     },\n//     {\n//       menuItem: \"Followers\",\n//       render: () => (\n//         <Tab.Pane>\n//           <ProfileFollowings />\n//         </Tab.Pane>\n//       ),\n//     },\n//     {\n//       menuItem: \"Following\",\n//       render: () => (\n//         <Tab.Pane>\n//           <ProfileFollowings />\n//         </Tab.Pane>\n//       ),\n//     },\n//   ];\n\n//   return (\n//     <Tab\n//       menu={{ fluid: true, vertical: true }}\n//       menuPosition=\"right\"\n//       panes={panes}\n//     />\n//   );\n// });\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport {\n  Divider,\n  Grid,\n  Header,\n  Item,\n  Segment,\n  Statistic,\n} from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileHeader({ profile }: Props) {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image\n                avatar\n                size=\"small\"\n                src={profile.image || \"/assets/user.png\"}\n              />\n              <Item.Content verticalAlign=\"middle\">\n                <Header as=\"h1\" content={profile.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label=\"Followers\" value={profile.followersCount} />\n            <Statistic label=\"Following\" value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile} />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n});\n\n// import { observer } from \"mobx-react-lite\";\n// import React from \"react\";\n// import {\n//   Button,\n//   Divider,\n//   Grid,\n//   Header,\n//   Item,\n//   Reveal,\n//   Segment,\n//   Statistic,\n// } from \"semantic-ui-react\";\n// import { Profile } from \"../../app/models/profile\";\n\n// interface Props {\n//   profile: Profile;\n// }\n\n// export default observer(function ProfileHeader({ profile }: Props) {\n//   return (\n//     <Segment>\n//       <Grid>\n//         <Grid.Column width={12}>\n//           <Item.Group>\n//             <Item>\n//               <Item.Image\n//                 avatar\n//                 size=\"small\"\n//                 src={profile.image || \"/assets/user.png\"}\n//               />\n//               <Item.Content verticalAlign=\"middle\">\n//                 <Header as=\"h1\" content={profile.displayName} />\n//               </Item.Content>\n//             </Item>\n//           </Item.Group>\n//         </Grid.Column>\n//         <Grid.Column width={4}>\n//           <Statistic.Group widths={2}>\n//             <Statistic label=\"Followers\" value=\"5\" />\n//             <Statistic label=\"Followers\" value=\"42\" />\n//           </Statistic.Group>\n//           <Divider />\n//           <Reveal animated=\"move\">\n//             <Reveal.Content visible style={{ width: \"100%\" }}>\n//               <Button fluid color=\"violet\" content=\"Following\" />\n//             </Reveal.Content>\n//             <Reveal.Content hidden style={{ width: \"100%\" }}>\n//               <Button\n//                 fluid\n//                 color={true ? \"green\" : \"green\"}\n//                 content={true ? \"follow\" : \"unfollow\"}\n//               />\n//             </Reveal.Content>\n//           </Reveal>\n//         </Grid.Column>\n//       </Grid>\n//     </Segment>\n//   );\n// });\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileContent from \"./ProfileContent\";\nimport ProfileHeader from \"./ProfileHeader\";\n\nexport default observer(function ProfilePage() {\n  const { username } = useParams<{ username: string }>();\n  const { profileStore } = useStore();\n  const { loadingProfile, loadProfile, profile } = profileStore;\n\n  useEffect(() => {\n    loadProfile(username);\n    return () => {};\n  }, [loadProfile, username]);\n\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\n\n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        {profile && (\n          <>\n            <ProfileHeader profile={profile} />\n            <ProfileContent profile={profile} />\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React from \"react\";\nimport {\n  Redirect,\n  Route,\n  RouteComponentProps,\n  RouteProps,\n} from \"react-router-dom\";\nimport { useStore } from \"../stores/store\";\n\ninterface Props extends RouteProps {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\n  const {\n    userStore: { isLoggedIn },\n  } = useStore();\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n}\n","import { useLocation } from \"react-router-dom\";\n\nexport default function useQuery() {\n    return new URLSearchParams(useLocation().search);\n}","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\nimport agent from \"../../app/api/agent\";\nimport useQuery from \"../../app/common/util/hooks\";\n\nexport default function RegisterSuccess() {\n  const email = useQuery().get(\"email\") as string;\n\n  function handleConfirmEmailResend() {\n    agent.Account.resendEmailConfirm(email)\n      .then(() => {\n        toast.success(\n          \"Verification email is now resent  - Please check your email\"\n        );\n      })\n      .catch((error) => console.log(error));\n  }\n\n  return (\n    <Segment placeholder textAlign=\"center\">\n      <Header icon color=\"green\">\n        <Icon name=\"check\" />\n        Successfully registered your email!\n      </Header>\n      <p>\n        Please check your email (including junk email) for the verification\n        email\n      </p>\n      {email && (\n        <>\n          <p>Didn't receive the email? Click the below button to resend</p>\n          <Button\n            primary\n            onClick={handleConfirmEmailResend}\n            content=\"Resend email\"\n            size=\"huge\"\n          />\n        </>\n      )}\n    </Segment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\nimport agent from \"../../app/api/agent\";\nimport useQuery from \"../../app/common/util/hooks\";\nimport { useStore } from \"../../app/stores/store\";\nimport LoginForm from \"./LoginForm\";\n\nexport default function ConfirmEmail() {\n  const { modalStore } = useStore();\n  const email = useQuery().get(\"email\") as string;\n  const token = useQuery().get(\"token\") as string;\n\n  const Status = {\n    Verifying: \"Verifying\",\n    Failed: \"Failed\",\n    Success: \"Success\",\n  };\n\n  const [status, setStatus] = useState(Status.Verifying);\n\n  function handleConfirmEmailResend() {\n    agent.Account.resendEmailConfirm(email)\n      .then(() => {\n        toast.success(\"Verification email resent - please check your email\");\n      })\n      .catch((error) => console.log(error));\n  }\n\n  useEffect(() => {\n    agent.Account.verifyEmail(token, email)\n      .then(() => {\n        setStatus(Status.Success);\n      })\n      .catch(() => {\n        setStatus(Status.Failed);\n      });\n  }, [Status.Failed, Status.Success, token, email]);\n\n  function getBody() {\n    switch (status) {\n      case Status.Verifying:\n        return <p>Verifying...</p>;\n      case Status.Failed:\n        return (\n          <div>\n            <p>\n              Sorry,Verification failed. You can try resending the verify link\n              to your email\n            </p>\n            <Button\n              primary\n              onClick={handleConfirmEmailResend}\n              size=\"huge\"\n              content=\"Resend email\"\n            />\n          </div>\n        );\n      case Status.Success:\n        return (\n          <div>\n            <p>Email has been verified - you can now login!</p>\n            <Button\n              content=\"Login\"\n              primary\n              onClick={() => modalStore.openModal(<LoginForm />)}\n              size=\"huge\"\n            />\n          </div>\n        );\n    }\n  }\n  return (\n    <Segment placeholder textAlign=\"center\">\n      <Header icon>\n        <Icon name=\"envelope\" />\n        Email verification\n      </Header>\n      <Segment.Inline>{getBody()}</Segment.Inline>\n    </Segment>\n  );\n}\n","import React, { useEffect } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport NavBar from \"./NavBar\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\r\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\r\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\r\nimport TestErrors from \"../../features/errors/TestError\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport { useStore } from \"../stores/store\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport ModalContainer from \"../common/modals/ModalContainer\";\r\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport RegisterSuccess from \"../../features/users/RegisterSuccess\";\r\nimport ConfirmEmail from \"../../features/users/ConfirmEmail\";\r\n// import { Activity } from \"../models/activity\";\r\n\r\n// import { List } from \"semantic-ui-react\";\r\n// import { companies } from './demo'\r\n// import Mnc from './company'\r\n\r\nfunction App() {\r\n  const location = useLocation(); //adding a key on a route\r\n  const { commonStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if (!commonStore.appLoaded)\r\n    return <LoadingComponent content=\"Loading now...\" />;\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\r\n      <ModalContainer />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      {/* any route match  the \"/\" and this +particular route */}\r\n      <Route\r\n        path={\"/(.+)\"}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <Switch>\r\n                <PrivateRoute\r\n                  exact\r\n                  path=\"/activities\"\r\n                  component={ActivityDashboard}\r\n                />\r\n                <PrivateRoute\r\n                  path=\"/activities/:id\"\r\n                  component={ActivityDetails}\r\n                />\r\n                <PrivateRoute\r\n                  key={location.key}\r\n                  path={[\"/createActivity\", \"/manage/:id\"]}\r\n                  component={ActivityForm}\r\n                />\r\n                <PrivateRoute\r\n                  path=\"/profiles/:username\"\r\n                  component={ProfilePage}\r\n                />\r\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\r\n                <Route path=\"/server-error\" component={ServerError} />\r\n                <Route\r\n                  path=\"/account/registerSuccess\"\r\n                  component={RegisterSuccess}\r\n                />\r\n                <Route path=\"/account/verifyEmail\" component={ConfirmEmail} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./app/layout/style.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\n// import { BrowserRouter } from \"react-router-dom\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\nimport { createBrowserHistory } from \"history\";\n\nimport { Router } from \"react-router-dom\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}